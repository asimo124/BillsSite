	                            ///////////////////////////////////////////
	                            // TblAssociationCodesDisposal
	                            if let codes_disposal = base_json["codes_disposal"] as? NSArray {
                                
	                                if DBUtils.isNewDB() == false {
	                                    TblAssociationCodesDisposal.truncate()
	                                }
                                
	                                let dbn = DatabaseOld()
	                                if codes_disposal.count > 0 {
	                                    for (var i = 0; i < codes_disposal.count; i += 1 ) {
                                        
	                                        if let get_codes_disposal = codes_disposal[i] as? NSDictionary {
                                            
	                                            let disposal = get_codes_disposal["disposal"] as? Int
	                                            let disposal_stat = get_codes_disposal["disposal_stat"] as? String
	                                            let disposal_text = get_codes_disposal["disposal_text"] as? String
                                            
	                                            if DBUtils.isNewDB() == false {
                                                
	                                                let MyTblAssociationCodesDisposal = TblAssociationCodesDisposalData()
                                                
	                                                MyTblAssociationCodesDisposal.setDisposal(disposal)
	                                                MyTblAssociationCodesDisposal.setDisposalStat(disposal_stat)
	                                                MyTblAssociationCodesDisposal.setDisposalText(disposal_text)
                                                
	                                                MyTblAssociationCodesDisposal.addNew()
                                                
	                                            }
	                                        }
	                                    }
                                    
	                                    if (self.db_ins_query.rangeOfString("select") != nil) {
	                                        dbn.query(self.db_ins_query)
	                                    }
	                                } else if self.sync_test_mode == true {
                                    
	                                    /*let MyAnimalsLocationData = AnimalsPastureLocationData()
	                                     let registration: String? = "TEST123"
	                                     MyAnimalsLocationData.setRegistration(registration)
	                                     let pasture_id: Int? = 123
	                                     MyAnimalsLocationData.setPastureId(pasture_id)
	                                     let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
	                                     MyAnimalsLocationData.setMoveIn(move_in)
	                                     MyAnimalsLocationData.addNew()*/
	                                }
	                                dbn.showRecords("codes_disposal", withFields: ["disposal", "disposal_stat", "disposal_text"], withHeaders: ["disposal", "disposal_s", "disposal_t"], withSizes: [25, 45, 45], withDataType: "TblAssociationCodesDisposal");
                                
	                            }
                            
                            
                            
	                            ///////////////////////////////////////////
	                            // TblAssociationCodesBodyCondition
	                            if let codes_body_condition = base_json["codes_body_condition"] as? NSArray {
                                
	                                if DBUtils.isNewDB() == false && self.offset == 0 {
	                                    print("codes_body_condition")
	                                    TblAssociationCodesBodyCondition.truncate()
	                                }
                                
	                                let dbn = DatabaseOld()
	                                if codes_body_condition.count > 0 {
	                                    for (var i = 0; i < codes_body_condition.count; i += 1 ) {
                                        
	                                        if let get_codes_body_condition = codes_body_condition[i] as? NSDictionary {
                                            
	                                            let body_condition_score = get_codes_body_condition["body_condition_score"] as? Int
	                                            let body_condition_text = get_codes_body_condition["body_condition_text"] as? String
	                                            if DBUtils.isNewDB() == false {
                                                
	                                                let MyTblAssociationCodesBodyCondition = TblAssociationCodesBodyConditionData()
                                                
	                                                MyTblAssociationCodesBodyCondition.setBodyConditionScore(body_condition_score)
	                                                MyTblAssociationCodesBodyCondition.setBodyConditionText(body_condition_text)
	                                                MyTblAssociationCodesBodyCondition.addNew()
                                                
	                                            }
	                                        }
	                                    }
                                    
	                                    if (self.db_ins_query.rangeOfString("select") != nil) {
	                                        dbn.query(self.db_ins_query)
	                                    }
	                                } else if self.sync_test_mode == true {
                                    
	                                    /*let MyAnimalsLocationData = AnimalsPastureLocationData()
	                                     let registration: String? = "TEST123"
	                                     MyAnimalsLocationData.setRegistration(registration)
	                                     let pasture_id: Int? = 123
	                                     MyAnimalsLocationData.setPastureId(pasture_id)
	                                     let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
	                                     MyAnimalsLocationData.setMoveIn(move_in)
	                                     MyAnimalsLocationData.addNew()*/
	                                }
	                                dbn.showRecords("codes_body_condition", withFields: ["body_condition_score", "body_condition_text"], withHeaders: ["body_condi", "body_condi"], withSizes: [25, 45, 45], withDataType: "TblAssociationCodesBodyCondition");
                                
	                            }
                            
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesScurScore
		                        if let codes_scur_score = base_json["codes_scur_score"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                print("codes_scur_score")
	                                    TblAssociationCodesScurScore.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_scur_score.count > 0 {
		                                for (var i = 0; i < codes_scur_score.count; i += 1 ) {
                                    
		                                    if let get_codes_scur_score = codes_scur_score[i] as? NSDictionary {
                                        
		                                        let scur_score = get_codes_scur_score["scur_score"] as? Int
		                                        let scur_score_text = get_codes_scur_score["scur_score_text"] as? String
		                                        let scur = get_codes_scur_score["scur"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesScurScore = TblAssociationCodesScurScoreData()
                                            
		                                            MyTblAssociationCodesScurScore.setScurScore(scur_score)
		                                            MyTblAssociationCodesScurScore.setScurScoreText(scur_score_text)
		                                            MyTblAssociationCodesScurScore.setScur(scur)
		                                            MyTblAssociationCodesScurScore.addNew()
                                                
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_scur_score", withFields: ["scur_score", "scur"], withHeaders: ["scur_score", "scur"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesScurScore");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesColorScore
		                        if let codes_color_score = base_json["codes_color_score"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesColorScore.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_color_score.count > 0 {
		                                for (var i = 0; i < codes_color_score.count; i += 1 ) {
                                    
		                                    if let get_codes_color_score = codes_color_score[i] as? NSDictionary {
                                        
		                                        let color_score_id = get_codes_color_score["color_score_id"] as? Int
		                                        let color_score_text = get_codes_color_score["color_score_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesColorScore = TblAssociationCodesColorScoreData()
                                            
		                                            MyTblAssociationCodesColorScore.setColorScoreId(color_score_id)
		                                            MyTblAssociationCodesColorScore.setColorScoreText(color_score_text)
		                                            MyTblAssociationCodesColorScore.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_color_score", withFields: ["color_score_id", "color_score_text"], withHeaders: ["color_scor", "color_scor"], withSizes: [25, 120], withDataType: "TblAssociationCodesColorScore");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesCalvingEase
		                        if let codes_calving_ease = base_json["codes_calving_ease"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesCalvingEase.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_calving_ease.count > 0 {
		                                for (var i = 0; i < codes_calving_ease.count; i += 1 ) {
                                    
		                                    if let get_codes_calving_ease = codes_calving_ease[i] as? NSDictionary {
                                        
		                                        let calving_ease_id = get_codes_calving_ease["calving_ease_id"] as? String
		                                        let calving_ease_text = get_codes_calving_ease["calving_ease_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesCalvingEase = TblAssociationCodesCalvingEaseData()
                                            
		                                            MyTblAssociationCodesCalvingEase.setCalvingEaseId(calving_ease_id)
		                                            MyTblAssociationCodesCalvingEase.setCalvingEaseText(calving_ease_text)
		                                            MyTblAssociationCodesCalvingEase.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_calving_ease", withFields: ["calving_ease_id", "calving_ease_text"], withHeaders: ["calving_ea", "calving_ea"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesCalvingEase");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesManagement
		                        if let codes_management = base_json["codes_management"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesManagement.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_management.count > 0 {
		                                for (var i = 0; i < codes_management.count; i += 1 ) {
                                    
		                                    if let get_codes_management = codes_management[i] as? NSDictionary {
                                        
		                                        let management = get_codes_management["management"] as? Int
		                                        let management_text = get_codes_management["management_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesManagement = TblAssociationCodesManagementData()
                                            
		                                            MyTblAssociationCodesManagement.setManagement(management)
		                                            MyTblAssociationCodesManagement.setManagementText(management_text)
		                                            MyTblAssociationCodesManagement.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_management", withFields: ["management", "management_text"], withHeaders: ["management", "management"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesManagement");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesNavelScore
		                        if let codes_navel_score = base_json["codes_navel_score"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesNavelScore.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_navel_score.count > 0 {
		                                for (var i = 0; i < codes_navel_score.count; i += 1 ) {
                                    
		                                    if let get_codes_navel_score = codes_navel_score[i] as? NSDictionary {
                                        
		                                        let navel_score_id = get_codes_navel_score["navel_score_id"] as? String
		                                        let navel_score_text = get_codes_navel_score["navel_score_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesNavelScore = TblAssociationCodesNavelScoreData()
                                            
		                                            MyTblAssociationCodesNavelScore.setNavelScoreId(navel_score_id)
		                                            MyTblAssociationCodesNavelScore.setNavelScoreText(navel_score_text)
		                                            MyTblAssociationCodesNavelScore.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_navel_score", withFields: ["navel_score_id", "navel_score_text"], withHeaders: ["navel_scor", "navel_scor"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesNavelScore");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesSheathScore
		                        if let codes_sheath_score = base_json["codes_sheath_score"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesSheathScore.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_sheath_score.count > 0 {
		                                for (var i = 0; i < codes_sheath_score.count; i += 1 ) {
                                    
		                                    if let get_codes_sheath_score = codes_sheath_score[i] as? NSDictionary {
                                        
		                                        let sheath_score_id = get_codes_sheath_score["sheath_score_id"] as? String
		                                        let sheath_score_text = get_codes_sheath_score["sheath_score_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesSheathScore = TblAssociationCodesSheathScoreData()
                                            
		                                            MyTblAssociationCodesSheathScore.setSheathScoreId(sheath_score_id)
		                                            MyTblAssociationCodesSheathScore.setSheathScoreText(sheath_score_text)
		                                            MyTblAssociationCodesSheathScore.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_sheath_score", withFields: ["sheath_score_id", "sheath_score_text"], withHeaders: ["sheath_sco", "sheath_sco"], withSizes: [25, 125], withDataType: "TblAssociationCodesSheathScore");
                            
		                        }
                        
                        
                            
		                        ///////////////////////////////////////////
		                        // AssociationCodesTemperScore
		                        if let codes_temper_score = base_json["codes_temper_score"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                    
		                                TblAssociationCodesTemperScore.truncate()
                                    
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_temper_score.count > 0 {
		                                for (var i = 0; i < codes_temper_score.count; i += 1 ) {
                                    
		                                    if let get_codes_temper_score = codes_temper_score[i] as? NSDictionary {
                                        
		                                        let temper_score_id = get_codes_temper_score["temper_score_id"] as? String
		                                        let temper_score_text = get_codes_temper_score["temper_score_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyAssociationCodesTemperScore = TblAssociationCodesTemperScoreData()
                                            
		                                            MyAssociationCodesTemperScore.setTemperScoreId(temper_score_id)
		                                            MyAssociationCodesTemperScore.setTemperScoreText(temper_score_text)
                                                
		                                            MyAssociationCodesTemperScore.addNew()
                                               
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
                                
		                            dbn.showRecords("codes_temper_score", withFields: ["temper_score_id", "temper_score_text"], withHeaders: ["temper_sco", "temper_sco"], withSizes: [25, 125,], withDataType: "AssociationCodesTemperScore");
                                
                            
		                        }
                            
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesTwinCode
		                        if let codes_twin_code = base_json["codes_twin_code"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesTwinCode.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_twin_code.count > 0 {
		                                for (var i = 0; i < codes_twin_code.count; i += 1 ) {
                                    
		                                    if let get_codes_twin_code = codes_twin_code[i] as? NSDictionary {
                                        
		                                        let twin_code_id = get_codes_twin_code["twin_code_id"] as? Int
		                                        let twin_code_text = get_codes_twin_code["twin_code_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesTwinCode = TblAssociationCodesTwinCodeData()
                                            
		                                            MyTblAssociationCodesTwinCode.setTwinCodeId(twin_code_id)
		                                            MyTblAssociationCodesTwinCode.setTwinCodeText(twin_code_text)
		                                            MyTblAssociationCodesTwinCode.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_twin_code", withFields: ["twin_code_id", "twin_code_text"], withHeaders: ["twin_code_", "twin_code_"], withSizes: [25, 125], withDataType: "TblAssociationCodesTwinCode");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesUdderScoreSuspension
		                        if let codes_udder_score_suspension = base_json["codes_udder_score_suspension"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesUdderScoreSuspension.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_udder_score_suspension.count > 0 {
		                                for (var i = 0; i < codes_udder_score_suspension.count ; i += 1 ) {
                                    
		                                    if let get_codes_udder_score_suspension = codes_udder_score_suspension[i] as? NSDictionary {
                                        
		                                        let suspension_id = get_codes_udder_score_suspension["suspension_id"] as? String
		                                        let suspension_text = get_codes_udder_score_suspension["suspension_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesUdderScoreSuspension = TblAssociationCodesUdderScoreSuspensionData()
                                            
		                                            MyTblAssociationCodesUdderScoreSuspension.setSuspensionId(suspension_id)
		                                            MyTblAssociationCodesUdderScoreSuspension.setSuspensionText(suspension_text)
		                                            MyTblAssociationCodesUdderScoreSuspension.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_udder_score_suspension", withFields: ["suspension_id", "suspension_text"], withHeaders: ["suspension", "suspension"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesUdderScoreSuspension");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesUdderScoreTeatSize
		                        if let codes_udder_score_teat_size = base_json["codes_udder_score_teat_size"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesUdderScoreTeatSize.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_udder_score_teat_size.count > 0 {
		                                for (var i = 0; i < codes_udder_score_teat_size.count; i += 1 ) {
                                    
		                                    if let get_codes_udder_score_teat_size = codes_udder_score_teat_size[i] as? NSDictionary {
                                        
		                                        let teat_size_id = get_codes_udder_score_teat_size["teat_size_id"] as? String
		                                        let teat_size_text = get_codes_udder_score_teat_size["teat_size_text"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesUdderScoreTeatSize = TblAssociationCodesUdderScoreTeatSizeData()
                                            
		                                            MyTblAssociationCodesUdderScoreTeatSize.setTeatSizeId(teat_size_id)
		                                            MyTblAssociationCodesUdderScoreTeatSize.setTeatSizeText(teat_size_text)
		                                            MyTblAssociationCodesUdderScoreTeatSize.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_udder_score_teat_size", withFields: ["teat_size_id", "teat_size_text"], withHeaders: ["teat_size_", "teat_size_"], withSizes: [25, 125], withDataType: "TblAssociationCodesUdderScoreTeatSize");
                            
		                        }
                        
                        
                        
		                        ///////////////////////////////////////////
		                        // TblAssociationCodesBreed
		                        if let codes_breed = base_json["codes_breed"] as? NSArray {
                            
		                            if DBUtils.isNewDB() == false && self.offset == 0 {
		                                TblAssociationCodesBreed.truncate()
		                            }
                            
		                            let dbn = DatabaseOld()
		                            if codes_breed.count > 0 {
		                                for (var i = 0; i < codes_breed.count; i += 1 ) {
                                    
		                                    if let get_codes_breed = codes_breed[i] as? NSDictionary {
                                        
		                                        let breed_id = get_codes_breed["breed_id"] as? String
		                                        let breed_name = get_codes_breed["breed_name"] as? String
		                                        let breed = get_codes_breed["breed"] as? String
		                                        if DBUtils.isNewDB() == false {
                                            
		                                            let MyTblAssociationCodesBreed = TblAssociationCodesBreedData()
                                            
		                                            MyTblAssociationCodesBreed.setBreedId(breed_id)
		                                            MyTblAssociationCodesBreed.setBreedName(breed_name)
		                                            MyTblAssociationCodesBreed.setBreed(breed)
		                                            MyTblAssociationCodesBreed.addNew()
                                            
                                            
                                            
                                            
                                            
		                                        }
		                                    }
		                                }
                                
		                                if (self.db_ins_query.rangeOfString("select") != nil) {
		                                    dbn.query(self.db_ins_query)
		                                }
		                            } else if self.sync_test_mode == true {
                                
		                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
		                                let registration: String? = "TEST123"
		                                MyAnimalsLocationData.setRegistration(registration)
		                                let pasture_id: Int? = 123
		                                MyAnimalsLocationData.setPastureId(pasture_id)
		                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
		                                MyAnimalsLocationData.setMoveIn(move_in)
		                                MyAnimalsLocationData.addNew()*/
		                            }
		                            dbn.showRecords("codes_breed", withFields: ["breed_id", "breed_name", "breed"], withHeaders: ["breed_id", "breed_name", "breed"], withSizes: [25, 75, 50], withDataType: "TblAssociationCodesBreed");
                            
		                        }
                        
	                            //Association Codes Completed
                            
								dispatch_async(dispatch_get_main_queue()) {   // background thread completed
							  
	                                //print("association codes completed")
                                
									self.db_cur_index += 1  // increment to 1
									self.offset = 0
									
									var send_url_sync = NSString()
									if self.default_limit == self.limit { 
								
										send_url_sync = NSString(format: "http://api.digitalbeef.com/webservice/sync_webservice.php?provider=%@&sync_flag=SYNC_FULL&member_id=%@&group=%@&offset=%@", self.db_names[self.cur_row], String(member_num_id), self.db_old_tables_list[self.db_cur_index], String(self.offset))
								
									} else {
									
										send_url_sync = NSString(format: "http://api.digitalbeef.com/webservice/sync_webservice.php?provider=%@&sync_flag=SYNC_FULL&member_id=%@&group=%@&offset=%@&limit=%@", self.db_names[self.cur_row], String(member_num_id), self.db_old_tables_list[self.db_cur_index], String(self.offset), String(self.limit))
									}
									
									let url_to_send_sync = String(send_url_sync)
                                
	                                //print("url to send, end assoc:", url_to_send_sync)
									self.get_data_from_url(url_to_send_sync)
				                }
								
							}
	                        
                        } else {  // DB Old - Not Association Codes
                        	
							//print("started not-association codes")
                            
				            let priority = DISPATCH_QUEUE_PRIORITY_DEFAULT
				            dispatch_async(dispatch_get_global_queue(priority, 0)) {  // run full sync in background*/
							
								let returned_record_count2 = base_json["record_count"] as? Int ?? 0
								self.returned_record_count = returned_record_count2
									
								if self.returned_record_count > 0 && self.db_cur_index < self.db_old_tables_list.count {
							
                                    //print("record count > 0")
                                    
			                        ///////////////////////////////////////////
			                        // TblAnimal
			                        if let tbl_animal = base_json["tbl_animal"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
			                                print("tbl_animal")
                                            TblAnimal.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal.count > 0 {
                                            
                                            //print("doing table animal")
			                                for (var i = 0; i < tbl_animal.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal = tbl_animal[i] as? NSDictionary {
                                        
			                                        let animal_id = get_tbl_animal["animal_id"] as? Int
			                                        let animal_registration = get_tbl_animal["animal_registration"] as? String
			                                        let breeder_id = get_tbl_animal["breeder_id"] as? Int
			                                        let animal_record_status = get_tbl_animal["animal_record_status"] as? String
			                                        let animal_name = get_tbl_animal["animal_name"] as? String
			                                        let animal_sex = get_tbl_animal["animal_sex"] as? String
			                                        let animal_sire = get_tbl_animal["animal_sire"] as? String
			                                        let animal_dam = get_tbl_animal["animal_dam"] as? String
			                                        let animal_hold_brand = get_tbl_animal["animal_hold_brand"] as? String
			                                        let animal_hold_brand_location = get_tbl_animal["animal_hold_brand_location"] as? String
			                                        let animal_private_herd_id = get_tbl_animal["animal_private_herd_id"] as? String
			                                        let animal_private_herd_id_location = get_tbl_animal["animal_private_herd_id_location"] as? String
			                                        let animal_color_score = get_tbl_animal["animal_color_score"] as? Int
			                                        let animal_scurs_code = get_tbl_animal["animal_scurs_code"] as? String
			                                        let breed_code_1 = get_tbl_animal["breed_code_1"] as? String
			                                        let breed_percentage_1 = get_tbl_animal["breed_percentage_1"] as? Double
			                                        let breed_code_2 = get_tbl_animal["breed_code_2"] as? String
			                                        let breed_percentage_2 = get_tbl_animal["breed_percentage_2"] as? Double
			                                        let breed_code_3 = get_tbl_animal["breed_code_3"] as? String
			                                        let breed_percentage_3 = get_tbl_animal["breed_percentage_3"] as? Double
			                                        let breed_code_4 = get_tbl_animal["breed_code_4"] as? String
			                                        let breed_percentage_4 = get_tbl_animal["breed_percentage_4"] as? Double
			                                        let create_user = get_tbl_animal["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let status_code = get_tbl_animal["status_code"] as? Double
			                                        let generation = get_tbl_animal["generation"] as? Int
			                                        let certificate_filename = get_tbl_animal["certificate_filename"] as? String
			                                        let work_order = get_tbl_animal["work_order"] as? String
			                                        let foreign_association_registration = get_tbl_animal["foreign_association_registration"] as? String
			                                        let foreign_registration_association = get_tbl_animal["foreign_registration_association"] as? String
			                                        let status_code_date2 = get_tbl_animal["status_code_date"] as? String
			                                        let status_code_date = Utils.convertToDateOpt(status_code_date2)
			                                        let international_id = get_tbl_animal["international_id"] as? String
			                                        let eid = get_tbl_animal["eid"] as? String
			                                        let metal_ear_tag = get_tbl_animal["metal_ear_tag"] as? String
			                                        let other_id = get_tbl_animal["other_id"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimal = TblAnimalData()
                                            
			                                            MyTblAnimal.setAnimalId(animal_id)
			                                            MyTblAnimal.setAnimalRegistration(animal_registration)
			                                            MyTblAnimal.setBreederId(breeder_id)
			                                            MyTblAnimal.setAnimalRecordStatus(animal_record_status)
			                                            MyTblAnimal.setAnimalName(animal_name)
			                                            MyTblAnimal.setAnimalSex(animal_sex)
			                                            MyTblAnimal.setAnimalSire(animal_sire)
			                                            MyTblAnimal.setAnimalDam(animal_dam)
			                                            MyTblAnimal.setAnimalHoldBrand(animal_hold_brand)
			                                            MyTblAnimal.setAnimalHoldBrandLocation(animal_hold_brand_location)
			                                            MyTblAnimal.setAnimalPrivateHerdId(animal_private_herd_id)
			                                            MyTblAnimal.setAnimalPrivateHerdIdLocation(animal_private_herd_id_location)
			                                            MyTblAnimal.setAnimalColorScore(animal_color_score)
			                                            MyTblAnimal.setAnimalScursCode(animal_scurs_code)
			                                            MyTblAnimal.setBreedCode1(breed_code_1)
			                                            MyTblAnimal.setBreedPercentage1(breed_percentage_1)
			                                            MyTblAnimal.setBreedCode2(breed_code_2)
			                                            MyTblAnimal.setBreedPercentage2(breed_percentage_2)
			                                            MyTblAnimal.setBreedCode3(breed_code_3)
			                                            MyTblAnimal.setBreedPercentage3(breed_percentage_3)
			                                            MyTblAnimal.setBreedCode4(breed_code_4)
			                                            MyTblAnimal.setBreedPercentage4(breed_percentage_4)
			                                            MyTblAnimal.setCreateUser(create_user)
			                                            MyTblAnimal.setCreateStamp(create_stamp)
			                                            MyTblAnimal.setUpdateUser(update_user)
			                                            MyTblAnimal.setUpdateStamp(update_stamp)
			                                            MyTblAnimal.setStatusCode(status_code)
			                                            MyTblAnimal.setGeneration(generation)
			                                            MyTblAnimal.setCertificateFilename(certificate_filename)
			                                            MyTblAnimal.setWorkOrder(work_order)
			                                            MyTblAnimal.setForeignAssociationRegistration(foreign_association_registration)
			                                            MyTblAnimal.setForeignRegistrationAssociation(foreign_registration_association)
			                                            MyTblAnimal.setStatusCodeDate(status_code_date)
			                                            MyTblAnimal.setInternationalId(international_id)
			                                            MyTblAnimal.setEid(eid)
			                                            MyTblAnimal.setMetalEarTag(metal_ear_tag)
			                                            MyTblAnimal.setOtherId(other_id)
			                                            MyTblAnimal.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal", withFields: ["animal_id", "animal_registration", "breeder_id"], withHeaders: ["animal_id", "animal_reg", "breeder_id"], withSizes: [25, 75, 50], withDataType: "TblAnimal");
                            
			                        }
                                    
                                    
                                    
                                    
                                    ///////////////////////////////////////////
                                    // TblAnimalDataMisc
                                    if let tbl_animal_data_misc = base_json["tbl_animal_data_misc"] as? NSArray {
                                        
                                        if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_data_misc")
                                            TblAnimalDataMisc.truncate()
                                        }
                                        
                                        let dbn = DatabaseOld()
                                        if tbl_animal_data_misc.count > 0 {
                                            for (var i = 0; i < tbl_animal_data_misc.count; i += 1 ) {
                                                
                                                if let get_tbl_animal_data_misc = tbl_animal_data_misc[i] as? NSDictionary {
                                                    
                                                    let _id = get_tbl_animal_data_misc["_id"] as? Int
                                                    let animal_registration = get_tbl_animal_data_misc["animal_registration"] as? String
                                                    let weight = get_tbl_animal_data_misc["weight"] as? Int
                                                    let measurement_date2 = get_tbl_animal_data_misc["measurement_date"] as? String
                                                    let measurement_date = Utils.convertToDateOpt(measurement_date2)
                                                    let rump_fat = get_tbl_animal_data_misc["rump_fat"] as? Double
                                                    let body_condition_score = get_tbl_animal_data_misc["body_condition_score"] as? Int
                                                    let measurement_type = get_tbl_animal_data_misc["measurement_type"] as? String
                                                    let measurement_diameter = get_tbl_animal_data_misc["measurement_diameter"] as? Double
                                                    let days_bred = get_tbl_animal_data_misc["days_bred"] as? String
                                                    if DBUtils.isNewDB() == false {
                                                        
                                                        let MyTblAnimalDataMisc = TblAnimalDataMiscData()
                                                        
                                                        MyTblAnimalDataMisc.setId(_id)
                                                        MyTblAnimalDataMisc.setAnimalRegistration(animal_registration)
                                                        MyTblAnimalDataMisc.setWeight(weight)
                                                        MyTblAnimalDataMisc.setMeasurementDate(measurement_date)
                                                        MyTblAnimalDataMisc.setRumpFat(rump_fat)
                                                        MyTblAnimalDataMisc.setBodyConditionScore(body_condition_score)
                                                        MyTblAnimalDataMisc.setMeasurementType(measurement_type)
                                                        MyTblAnimalDataMisc.setMeasurementDiameter(measurement_diameter)
                                                        MyTblAnimalDataMisc.setDaysBred(days_bred)
                                                        MyTblAnimalDataMisc.addNew()
                                                        
                                                        
                                                        
                                                        
                                                        
                                                    }
                                                }
                                            }
                                            
                                            if (self.db_ins_query.rangeOfString("select") != nil) {
                                                dbn.query(self.db_ins_query)
                                            }
                                        } else if self.sync_test_mode == true {
                                            
                                            /*let MyAnimalsLocationData = AnimalsPastureLocationData()
                                             let registration: String? = "TEST123"
                                             MyAnimalsLocationData.setRegistration(registration)
                                             let pasture_id: Int? = 123
                                             MyAnimalsLocationData.setPastureId(pasture_id)
                                             let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
                                             MyAnimalsLocationData.setMoveIn(move_in)
                                             MyAnimalsLocationData.addNew()*/
                                        }
                                        dbn.showRecords("tbl_animal_data_misc", withFields: ["_id", "animal_registration", "weight"], withHeaders: ["_id", "animal_reg", "weight"], withSizes: [25, 45, 45], withDataType: "TblAnimalDataMisc");
                                        
                                    }
                                    
                                    
                                    ///////////////////////////////////////////
                                    // TblReports
                                    /*if let tbl_member_reports_android = base_json["tbl_member_reports_android"] as? NSArray {
                                        
                                        if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("reports")
                                            TblReports.truncate()
                                        }
                                        
                                        let dbn = DatabaseOld()
                                        if tbl_member_reports_android.count > 0 {
                                            for (var i = 0; i < tbl_member_reports_android.count; i += 1 ) {
                                                
                                                if let get_tbl_member_reports_android = tbl_member_reports_android[i] as? NSDictionary {
                                                    
                                                    let pk_id = get_tbl_member_reports_android["pk_id"] as? Int
                                                    let member_id = get_tbl_member_reports_android["member_id"] as? Int
                                                    let report_type = get_tbl_member_reports_android["report_type"] as? String
                                                    let report_file_name = get_tbl_member_reports_android["report_file_name"] as? String
                                                    let create_stamp2 = get_tbl_member_reports_android["create_stamp"] as? String
                                                    let create_stamp = Utils.convertToDateOpt(create_stamp2)
                                                    let report_format = get_tbl_member_reports_android["report_format"] as? String
                                                    let create_user = get_tbl_member_reports_android["create_user"] as? String
                                                    if DBUtils.isNewDB() == false {
                                                        
                                                        let MyTblReports = TblReportsData()
                                                        
                                                        MyTblReports.setPkId(pk_id)
                                                        MyTblReports.setMemberId(member_id)
                                                        MyTblReports.setReportType(report_type)
                                                        MyTblReports.setReportFileName(report_file_name)
                                                        MyTblReports.setCreateStamp(create_stamp)
                                                        MyTblReports.setReportFormat(report_format)
                                                        MyTblReports.setCreateUser(create_user)
                                                        MyTblReports.addNew()
                                                        
                                                        
                                                        
                                                        
                                                        
                                                    }
                                                }
                                            }
                                            
                                            if (self.db_ins_query.rangeOfString("select") != nil) {
                                                dbn.query(self.db_ins_query)
                                            }
                                        } else if self.sync_test_mode == true {
                                            
                                            /*let MyAnimalsLocationData = AnimalsPastureLocationData()
                                             let registration: String? = "TEST123"
                                             MyAnimalsLocationData.setRegistration(registration)
                                             let pasture_id: Int? = 123
                                             MyAnimalsLocationData.setPastureId(pasture_id)
                                             let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
                                             MyAnimalsLocationData.setMoveIn(move_in)
                                             MyAnimalsLocationData.addNew()*/
                                        }
                                        dbn.showRecords("tbl_member_reports_android", withFields: ["pk_id", "member_id", "report_type"], withHeaders: ["pk_id", "member_id", "report_typ"], withSizes: [25, 45, 45], withDataType: "TblReports");
                                        
                                    }*/
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataBirth
			                        if let tbl_animal_data_birth = base_json["tbl_animal_data_birth"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_birth" {
                                        
                                        //print("finished table animal")
                                    
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
			                                print("tbl_animal_data_birth")
                                            TblAnimalDataBirth.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_birth.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_birth.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_birth = tbl_animal_data_birth[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_birth["animal_registration"] as? String
			                                        let contemporary_group = get_tbl_animal_data_birth["contemporary_group"] as? String
			                                        let management_group = get_tbl_animal_data_birth["management_group"] as? String
			                                        let animal_service_type = get_tbl_animal_data_birth["animal_service_type"] as? String
			                                        let birth_date2 = get_tbl_animal_data_birth["birth_date"] as? String
			                                        let birth_date = Utils.convertToDateOpt(birth_date2)
			                                        let birth_weight = get_tbl_animal_data_birth["birth_weight"] as? Double
			                                        let animal_sex = get_tbl_animal_data_birth["animal_sex"] as? String
			                                        let twin_code = get_tbl_animal_data_birth["twin_code"] as? String
			                                        let calving_ease = get_tbl_animal_data_birth["calving_ease"] as? String
			                                        let udder_score_suspension = get_tbl_animal_data_birth["udder_score_suspension"] as? String
			                                        let udder_score_teat_size = get_tbl_animal_data_birth["udder_score_teat_size"] as? String
			                                        let natural_breeding_agreement = get_tbl_animal_data_birth["natural_breeding_agreement"] as? Int
			                                        //let natural_breeding_agreement = natural_breeding_agreement2 == "true" ? 1 : 0
			                                        let breeding_agreement_location = get_tbl_animal_data_birth["breeding_agreement_location"] as? String
			                                        let et_flush_date2 = get_tbl_animal_data_birth["et_flush_date"] as? String
			                                        let et_flush_date = Utils.convertToDateOpt(et_flush_date2)
			                                        let et_transfer_date2 = get_tbl_animal_data_birth["et_transfer_date"] as? String
			                                        let et_transfer_date = Utils.convertToDateOpt(et_transfer_date2)
			                                        let recipient_dam_registration = get_tbl_animal_data_birth["recipient_dam_registration"] as? String
			                                        let recipient_dam_animal_tattoo = get_tbl_animal_data_birth["recipient_dam_animal_tattoo"] as? String
			                                        let create_user = get_tbl_animal_data_birth["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_birth["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_birth["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_data_birth["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let version = get_tbl_animal_data_birth["version"] as? Int
			                                        let birth_weight_adj = get_tbl_animal_data_birth["birth_weight_adj"] as? Double
			                                        let sub_contemporary_group = get_tbl_animal_data_birth["sub_contemporary_group"] as? Int
			                                        let herd_id = get_tbl_animal_data_birth["herd_id"] as? String
			                                        let inspector_name = get_tbl_animal_data_birth["inspector_name"] as? String
			                                        let inspector_id = get_tbl_animal_data_birth["inspector_id"] as? Int
			                                        let bw_ratio = get_tbl_animal_data_birth["bw_ratio"] as? Int
			                                        let premise_id = get_tbl_animal_data_birth["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_birth["pasture_id"] as? String
			                                        let work_order = get_tbl_animal_data_birth["work_order"] as? String
			                                        let pre_contemporary_group = get_tbl_animal_data_birth["pre_contemporary_group"] as? Int
			                                        let calving_season = get_tbl_animal_data_birth["calving_season"] as? Int
			                                        let commit_lock_id = get_tbl_animal_data_birth["commit_lock_id"] as? Int
			                                        let age_of_dam = get_tbl_animal_data_birth["age_of_dam"] as? Int
			                                        let inventory_season = get_tbl_animal_data_birth["inventory_season"] as? String
			                                        let eid = get_tbl_animal_data_birth["eid"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataBirth = TblAnimalDataBirthData()
                                            
			                                            MyTblAnimalDataBirth.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataBirth.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataBirth.setManagementGroup(management_group)
			                                            MyTblAnimalDataBirth.setAnimalServiceType(animal_service_type)
			                                            MyTblAnimalDataBirth.setBirthDate(birth_date)
			                                            MyTblAnimalDataBirth.setBirthWeight(birth_weight)
			                                            MyTblAnimalDataBirth.setAnimalSex(animal_sex)
			                                            MyTblAnimalDataBirth.setTwinCode(twin_code)
			                                            MyTblAnimalDataBirth.setCalvingEase(calving_ease)
			                                            MyTblAnimalDataBirth.setUdderScoreSuspension(udder_score_suspension)
			                                            MyTblAnimalDataBirth.setUdderScoreTeatSize(udder_score_teat_size)
			                                            MyTblAnimalDataBirth.setNaturalBreedingAgreement(natural_breeding_agreement)
			                                            MyTblAnimalDataBirth.setBreedingAgreementLocation(breeding_agreement_location)
			                                            MyTblAnimalDataBirth.setEtFlushDate(et_flush_date)
			                                            MyTblAnimalDataBirth.setEtTransferDate(et_transfer_date)
			                                            MyTblAnimalDataBirth.setRecipientDamRegistration(recipient_dam_registration)
			                                            MyTblAnimalDataBirth.setRecipientDamAnimalTattoo(recipient_dam_animal_tattoo)
			                                            MyTblAnimalDataBirth.setCreateUser(create_user)
			                                            MyTblAnimalDataBirth.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataBirth.setUpdateUser(update_user)
			                                            MyTblAnimalDataBirth.setUpdateStamp(update_stamp)
			                                            MyTblAnimalDataBirth.setVersion(version)
			                                            MyTblAnimalDataBirth.setBirthWeightAdj(birth_weight_adj)
			                                            MyTblAnimalDataBirth.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataBirth.setHerdId(herd_id)
			                                            MyTblAnimalDataBirth.setInspectorName(inspector_name)
			                                            MyTblAnimalDataBirth.setInspectorId(inspector_id)
			                                            MyTblAnimalDataBirth.setBwRatio(bw_ratio)
			                                            MyTblAnimalDataBirth.setPremiseId(premise_id)
			                                            MyTblAnimalDataBirth.setPastureId(pasture_id)
			                                            MyTblAnimalDataBirth.setWorkOrder(work_order)
			                                            MyTblAnimalDataBirth.setPreContemporaryGroup(pre_contemporary_group)
			                                            MyTblAnimalDataBirth.setCalvingSeason(calving_season)
			                                            MyTblAnimalDataBirth.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataBirth.setAgeOfDam(age_of_dam)
			                                            MyTblAnimalDataBirth.setInventorySeason(inventory_season)
			                                            MyTblAnimalDataBirth.setEid(eid)
			                                            MyTblAnimalDataBirth.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_birth", withFields: ["animal_registration", "contemporary_group", "management_group"], withHeaders: ["animal_reg", "contempora", "management"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataBirth");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataWean
			                        if let tbl_animal_data_wean = base_json["tbl_animal_data_wean"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_wean" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_data_wean")
			                                TblAnimalDataWean.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_wean.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_wean.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_wean = tbl_animal_data_wean[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_wean["animal_registration"] as? String
			                                        let wean_date2 = get_tbl_animal_data_wean["wean_date"] as? String
			                                        let wean_date = Utils.convertToDateOpt(wean_date2)
			                                        let wean_weight = get_tbl_animal_data_wean["wean_weight"] as? Double
			                                        let contemporary_group = get_tbl_animal_data_wean["contemporary_group"] as? Int
			                                        let management_group = get_tbl_animal_data_wean["management_group"] as? Int
			                                        let feed_code = get_tbl_animal_data_wean["feed_code"] as? Int
			                                        let animal_sex = get_tbl_animal_data_wean["animal_sex"] as? String
			                                        let hip_height_old = get_tbl_animal_data_wean["hip_height_old"] as? Double
			                                        let conformation_score = get_tbl_animal_data_wean["conformation_score"] as? Int
			                                        let sheath_score = get_tbl_animal_data_wean["sheath_score"] as? Int
			                                        let navel_score = get_tbl_animal_data_wean["navel_score"] as? Int
			                                        let wean_weight_adj = get_tbl_animal_data_wean["wean_weight_adj"] as? Double
			                                        let herd_id = get_tbl_animal_data_wean["herd_id"] as? String
			                                        let sub_contemporary_group = get_tbl_animal_data_wean["sub_contemporary_group"] as? Int
			                                        let ww_ratio = get_tbl_animal_data_wean["ww_ratio"] as? Double
			                                        let premise_id = get_tbl_animal_data_wean["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_wean["pasture_id"] as? String
			                                        let temper_score = get_tbl_animal_data_wean["temper_score"] as? Int
			                                        let scrotal_circumference = get_tbl_animal_data_wean["scrotal_circumference"] as? Double
			                                        let create_user = get_tbl_animal_data_wean["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_wean["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_wean["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_data_wean["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let frame_score = get_tbl_animal_data_wean["frame_score"] as? Double
			                                        let work_order = get_tbl_animal_data_wean["work_order"] as? String
			                                        let scrotal_circumference_adj = get_tbl_animal_data_wean["scrotal_circumference_adj"] as? Double
			                                        let pre_contemporary_group = get_tbl_animal_data_wean["pre_contemporary_group"] as? Int
			                                        let hip_height = get_tbl_animal_data_wean["hip_height"] as? Double
			                                        let commit_lock_id = get_tbl_animal_data_wean["commit_lock_id"] as? Int
			                                        let season = get_tbl_animal_data_wean["season"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataWean = TblAnimalDataWeanData()
                                            
			                                            MyTblAnimalDataWean.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataWean.setWeanDate(wean_date)
			                                            MyTblAnimalDataWean.setWeanWeight(wean_weight)
			                                            MyTblAnimalDataWean.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataWean.setManagementGroup(management_group)
			                                            MyTblAnimalDataWean.setFeedCode(feed_code)
			                                            MyTblAnimalDataWean.setAnimalSex(animal_sex)
			                                            MyTblAnimalDataWean.setHipHeightOld(hip_height_old)
			                                            MyTblAnimalDataWean.setConformationScore(conformation_score)
			                                            MyTblAnimalDataWean.setSheathScore(sheath_score)
			                                            MyTblAnimalDataWean.setNavelScore(navel_score)
			                                            MyTblAnimalDataWean.setWeanWeightAdj(wean_weight_adj)
			                                            MyTblAnimalDataWean.setHerdId(herd_id)
			                                            MyTblAnimalDataWean.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataWean.setWwRatio(ww_ratio)
			                                            MyTblAnimalDataWean.setPremiseId(premise_id)
			                                            MyTblAnimalDataWean.setPastureId(pasture_id)
			                                            MyTblAnimalDataWean.setTemperScore(temper_score)
			                                            MyTblAnimalDataWean.setScrotalCircumference(scrotal_circumference)
			                                            MyTblAnimalDataWean.setCreateUser(create_user)
			                                            MyTblAnimalDataWean.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataWean.setUpdateUser(update_user)
			                                            MyTblAnimalDataWean.setUpdateStamp(update_stamp)
			                                            MyTblAnimalDataWean.setFrameScore(frame_score)
			                                            MyTblAnimalDataWean.setWorkOrder(work_order)
			                                            MyTblAnimalDataWean.setScrotalCircumferenceAdj(scrotal_circumference_adj)
			                                            MyTblAnimalDataWean.setPreContemporaryGroup(pre_contemporary_group)
			                                            MyTblAnimalDataWean.setHipHeight(hip_height)
			                                            MyTblAnimalDataWean.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataWean.setSeason(season)
			                                            MyTblAnimalDataWean.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_wean", withFields: ["animal_registration", "wean_date", "wean_weight"], withHeaders: ["animal_reg", "wean_date", "wean_weigh"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataWean");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataYear
			                        if let tbl_animal_data_year = base_json["tbl_animal_data_year"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_year" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
			                                print("tbl_animal_data_year")
                                            TblAnimalDataYear.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_year.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_year.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_year = tbl_animal_data_year[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_year["animal_registration"] as? String
			                                        let year_date2 = get_tbl_animal_data_year["year_date"] as? String
			                                        let year_date = Utils.convertToDateOpt(year_date2)
			                                        let year_weight = get_tbl_animal_data_year["year_weight"] as? Double
			                                        let contemporary_group = get_tbl_animal_data_year["contemporary_group"] as? Int
			                                        let management_group = get_tbl_animal_data_year["management_group"] as? Int
			                                        let feed_code = get_tbl_animal_data_year["feed_code"] as? Int
			                                        let animal_sex = get_tbl_animal_data_year["animal_sex"] as? String
			                                        let year_weight_adj = get_tbl_animal_data_year["year_weight_adj"] as? Double
			                                        let herd_id = get_tbl_animal_data_year["herd_id"] as? String
			                                        let sub_contemporary_group = get_tbl_animal_data_year["sub_contemporary_group"] as? Int
			                                        let stage_code = get_tbl_animal_data_year["stage_code"] as? String
			                                        let hip_height_old = get_tbl_animal_data_year["hip_height_old"] as? Double
			                                        let conformation_score = get_tbl_animal_data_year["conformation_score"] as? Int
			                                        let sheath_score = get_tbl_animal_data_year["sheath_score"] as? Int
			                                        let navel_score = get_tbl_animal_data_year["navel_score"] as? Int
			                                        let yw_ratio = get_tbl_animal_data_year["yw_ratio"] as? Double
			                                        let premise_id = get_tbl_animal_data_year["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_year["pasture_id"] as? String
			                                        let yearling_age_range = get_tbl_animal_data_year["yearling_age_range"] as? String
			                                        let scrotal_circumference = get_tbl_animal_data_year["scrotal_circumference"] as? Double
			                                        let create_user = get_tbl_animal_data_year["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_year["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_year["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_data_year["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let temper_score = get_tbl_animal_data_year["temper_score"] as? Int
			                                        let avg_daily_gain = get_tbl_animal_data_year["avg_daily_gain"] as? Double
			                                        let frame_score = get_tbl_animal_data_year["frame_score"] as? Double
			                                        let work_order = get_tbl_animal_data_year["work_order"] as? String
			                                        let scrotal_circumference_adj = get_tbl_animal_data_year["scrotal_circumference_adj"] as? Double
			                                        let pre_contemporary_group = get_tbl_animal_data_year["pre_contemporary_group"] as? Int
			                                        let hip_height = get_tbl_animal_data_year["hip_height"] as? Double
			                                        let commit_lock_id = get_tbl_animal_data_year["commit_lock_id"] as? Int
			                                        let season = get_tbl_animal_data_year["season"] as? Int
			                                        let post_weaning_gain = get_tbl_animal_data_year["post_weaning_gain"] as? Double
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataYear = TblAnimalDataYearData()
                                            
			                                            MyTblAnimalDataYear.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataYear.setYearDate(year_date)
			                                            MyTblAnimalDataYear.setYearWeight(year_weight)
			                                            MyTblAnimalDataYear.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataYear.setManagementGroup(management_group)
			                                            MyTblAnimalDataYear.setFeedCode(feed_code)
			                                            MyTblAnimalDataYear.setAnimalSex(animal_sex)
			                                            MyTblAnimalDataYear.setYearWeightAdj(year_weight_adj)
			                                            MyTblAnimalDataYear.setHerdId(herd_id)
			                                            MyTblAnimalDataYear.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataYear.setStageCode(stage_code)
			                                            MyTblAnimalDataYear.setHipHeightOld(hip_height_old)
			                                            MyTblAnimalDataYear.setConformationScore(conformation_score)
			                                            MyTblAnimalDataYear.setSheathScore(sheath_score)
			                                            MyTblAnimalDataYear.setNavelScore(navel_score)
			                                            MyTblAnimalDataYear.setYwRatio(yw_ratio)
			                                            MyTblAnimalDataYear.setPremiseId(premise_id)
			                                            MyTblAnimalDataYear.setPastureId(pasture_id)
			                                            MyTblAnimalDataYear.setYearlingAgeRange(yearling_age_range)
			                                            MyTblAnimalDataYear.setScrotalCircumference(scrotal_circumference)
			                                            MyTblAnimalDataYear.setCreateUser(create_user)
			                                            MyTblAnimalDataYear.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataYear.setUpdateUser(update_user)
			                                            MyTblAnimalDataYear.setUpdateStamp(update_stamp)
			                                            MyTblAnimalDataYear.setTemperScore(temper_score)
			                                            MyTblAnimalDataYear.setAvgDailyGain(avg_daily_gain)
			                                            MyTblAnimalDataYear.setFrameScore(frame_score)
			                                            MyTblAnimalDataYear.setWorkOrder(work_order)
			                                            MyTblAnimalDataYear.setScrotalCircumferenceAdj(scrotal_circumference_adj)
			                                            MyTblAnimalDataYear.setPreContemporaryGroup(pre_contemporary_group)
			                                            MyTblAnimalDataYear.setHipHeight(hip_height)
			                                            MyTblAnimalDataYear.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataYear.setSeason(season)
			                                            MyTblAnimalDataYear.setPostWeaningGain(post_weaning_gain)
			                                            MyTblAnimalDataYear.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_year", withFields: ["animal_registration", "year_date", "year_weight"], withHeaders: ["animal_reg", "year_date", "year_weigh"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataYear");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataUltrasound
			                        if let tbl_animal_data_ultrasound = base_json["tbl_animal_data_ultrasound"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_ultrasound" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_data_ultrasound")
			                                TblAnimalDataUltrasound.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_ultrasound.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_ultrasound.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_ultrasound = tbl_animal_data_ultrasound[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_ultrasound["animal_registration"] as? String
			                                        let ribeye_area = get_tbl_animal_data_ultrasound["ribeye_area"] as? Double
			                                        let backfat_thickness = get_tbl_animal_data_ultrasound["backfat_thickness"] as? Double
			                                        let intramuscular_fat = get_tbl_animal_data_ultrasound["intramuscular_fat"] as? Double
			                                        let rump_fat = get_tbl_animal_data_ultrasound["rump_fat"] as? Double
			                                        let management_group = get_tbl_animal_data_ultrasound["management_group"] as? String
			                                        let technician = get_tbl_animal_data_ultrasound["technician"] as? String
			                                        let hardware = get_tbl_animal_data_ultrasound["hardware"] as? String
			                                        let software = get_tbl_animal_data_ultrasound["software"] as? String
			                                        let measurement_date2 = get_tbl_animal_data_ultrasound["measurement_date"] as? String
			                                        let measurement_date = Utils.convertToDateOpt(measurement_date2)
			                                        let ultrasound_weight = get_tbl_animal_data_ultrasound["ultrasound_weight"] as? Double
			                                        let contemporary_group = get_tbl_animal_data_ultrasound["contemporary_group"] as? Int
			                                        let ribeye_area_adj = get_tbl_animal_data_ultrasound["ribeye_area_adj"] as? Double
			                                        let backfat_thickness_adj = get_tbl_animal_data_ultrasound["backfat_thickness_adj"] as? Double
			                                        let intramuscular_fat_adj = get_tbl_animal_data_ultrasound["intramuscular_fat_adj"] as? Double
			                                        let animal_sex = get_tbl_animal_data_ultrasound["animal_sex"] as? String
			                                        let create_user = get_tbl_animal_data_ultrasound["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_ultrasound["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_ultrasound["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_data_ultrasound["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let sub_contemporary_group = get_tbl_animal_data_ultrasound["sub_contemporary_group"] as? Int
			                                        let herd_id = get_tbl_animal_data_ultrasound["herd_id"] as? Int
			                                        let premise_id = get_tbl_animal_data_ultrasound["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_ultrasound["pasture_id"] as? String
			                                        let work_order = get_tbl_animal_data_ultrasound["work_order"] as? String
			                                        let scrotal_circumference = get_tbl_animal_data_ultrasound["scrotal_circumference"] as? Double
			                                        let scrotal_circumference_adj = get_tbl_animal_data_ultrasound["scrotal_circumference_adj"] as? Double
			                                        let pre_contemporary_group = get_tbl_animal_data_ultrasound["pre_contemporary_group"] as? Int
			                                        let commit_lock_id = get_tbl_animal_data_ultrasound["commit_lock_id"] as? Int
			                                        let season = get_tbl_animal_data_ultrasound["season"] as? Int
			                                        let rea_ratio = get_tbl_animal_data_ultrasound["rea_ratio"] as? Int
			                                        let imf_ratio = get_tbl_animal_data_ultrasound["imf_ratio"] as? Int
			                                        let fat_ratio = get_tbl_animal_data_ultrasound["fat_ratio"] as? Int
			                                        let hip_height = get_tbl_animal_data_ultrasound["hip_height"] as? Double
			                                        let frame_score = get_tbl_animal_data_ultrasound["frame_score"] as? Double
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataUltrasound = TblAnimalDataUltrasoundData()
                                            
			                                            MyTblAnimalDataUltrasound.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataUltrasound.setRibeyeArea(ribeye_area)
			                                            MyTblAnimalDataUltrasound.setBackfatThickness(backfat_thickness)
			                                            MyTblAnimalDataUltrasound.setIntramuscularFat(intramuscular_fat)
			                                            MyTblAnimalDataUltrasound.setRumpFat(rump_fat)
			                                            MyTblAnimalDataUltrasound.setManagementGroup(management_group)
			                                            MyTblAnimalDataUltrasound.setTechnician(technician)
			                                            MyTblAnimalDataUltrasound.setHardware(hardware)
			                                            MyTblAnimalDataUltrasound.setSoftware(software)
			                                            MyTblAnimalDataUltrasound.setMeasurementDate(measurement_date)
			                                            MyTblAnimalDataUltrasound.setUltrasoundWeight(ultrasound_weight)
			                                            MyTblAnimalDataUltrasound.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataUltrasound.setRibeyeAreaAdj(ribeye_area_adj)
			                                            MyTblAnimalDataUltrasound.setBackfatThicknessAdj(backfat_thickness_adj)
			                                            MyTblAnimalDataUltrasound.setIntramuscularFatAdj(intramuscular_fat_adj)
			                                            MyTblAnimalDataUltrasound.setAnimalSex(animal_sex)
			                                            MyTblAnimalDataUltrasound.setCreateUser(create_user)
			                                            MyTblAnimalDataUltrasound.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataUltrasound.setUpdateUser(update_user)
			                                            MyTblAnimalDataUltrasound.setUpdateStamp(update_stamp)
			                                            MyTblAnimalDataUltrasound.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataUltrasound.setHerdId(herd_id)
			                                            MyTblAnimalDataUltrasound.setPremiseId(premise_id)
			                                            MyTblAnimalDataUltrasound.setPastureId(pasture_id)
			                                            MyTblAnimalDataUltrasound.setWorkOrder(work_order)
			                                            MyTblAnimalDataUltrasound.setScrotalCircumference(scrotal_circumference)
			                                            MyTblAnimalDataUltrasound.setScrotalCircumferenceAdj(scrotal_circumference_adj)
			                                            MyTblAnimalDataUltrasound.setPreContemporaryGroup(pre_contemporary_group)
			                                            MyTblAnimalDataUltrasound.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataUltrasound.setSeason(season)
			                                            MyTblAnimalDataUltrasound.setReaRatio(rea_ratio)
			                                            MyTblAnimalDataUltrasound.setImfRatio(imf_ratio)
			                                            MyTblAnimalDataUltrasound.setFatRatio(fat_ratio)
			                                            MyTblAnimalDataUltrasound.setHipHeight(hip_height)
			                                            MyTblAnimalDataUltrasound.setFrameScore(frame_score)
			                                            MyTblAnimalDataUltrasound.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_ultrasound", withFields: ["animal_registration", "ribeye_area", "backfat_thickness"], withHeaders: ["animal_reg", "ribeye_are", "backfat_th"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataUltrasound");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataCarcass
			                        if let tbl_animal_data_carcass = base_json["tbl_animal_data_carcass"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_carcass" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
			                                print("tbl_animal_data_carcass")
                                            TblAnimalDataCarcass.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_carcass.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_carcass.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_carcass = tbl_animal_data_carcass[i] as? NSDictionary {
                                        
			                                        let carcass_id = get_tbl_animal_data_carcass["carcass_id"] as? Int
			                                        let animal_registration = get_tbl_animal_data_carcass["animal_registration"] as? String
			                                        let carcass_tag = get_tbl_animal_data_carcass["carcass_tag"] as? String
			                                        let animal_sire = get_tbl_animal_data_carcass["animal_sire"] as? String
			                                        let birth_date2 = get_tbl_animal_data_carcass["birth_date"] as? String
			                                        let birth_date = Utils.convertToDateOpt(birth_date2)
			                                        let kill_date2 = get_tbl_animal_data_carcass["kill_date"] as? String
			                                        let kill_date = Utils.convertToDateOpt(kill_date2)
			                                        let contemporary_group = get_tbl_animal_data_carcass["contemporary_group"] as? String
			                                        let animal_sex = get_tbl_animal_data_carcass["animal_sex"] as? String
			                                        let cohort_group = get_tbl_animal_data_carcass["cohort_group"] as? String
			                                        let hot_carcass_weight = get_tbl_animal_data_carcass["hot_carcass_weight"] as? Int
			                                        let marbling_score = get_tbl_animal_data_carcass["marbling_score"] as? String
			                                        let quality_grade = get_tbl_animal_data_carcass["quality_grade"] as? String
			                                        let pyg = get_tbl_animal_data_carcass["pyg"] as? Double
			                                        let fat_thickness = get_tbl_animal_data_carcass["fat_thickness"] as? Double
			                                        let ribeye_area = get_tbl_animal_data_carcass["ribeye_area"] as? Double
			                                        let kph = get_tbl_animal_data_carcass["kph"] as? Int
			                                        let internal_fat = get_tbl_animal_data_carcass["internal_fat"] as? Double
			                                        let yield_grade = get_tbl_animal_data_carcass["yield_grade"] as? Double
			                                        let days_on_feed = get_tbl_animal_data_carcass["days_on_feed"] as? Int
			                                        let create_user = get_tbl_animal_data_carcass["create_user"] as? String
			                                        let create_date2 = get_tbl_animal_data_carcass["create_date"] as? String
			                                        let create_date = Utils.convertToDateOpt(create_date2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataCarcass = TblAnimalDataCarcassData()
                                            
			                                            MyTblAnimalDataCarcass.setCarcassId(carcass_id)
			                                            MyTblAnimalDataCarcass.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataCarcass.setCarcassTag(carcass_tag)
			                                            MyTblAnimalDataCarcass.setAnimalSire(animal_sire)
			                                            MyTblAnimalDataCarcass.setBirthDate(birth_date)
			                                            MyTblAnimalDataCarcass.setKillDate(kill_date)
			                                            MyTblAnimalDataCarcass.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataCarcass.setAnimalSex(animal_sex)
			                                            MyTblAnimalDataCarcass.setCohortGroup(cohort_group)
			                                            MyTblAnimalDataCarcass.setHotCarcassWeight(hot_carcass_weight)
			                                            MyTblAnimalDataCarcass.setMarblingScore(marbling_score)
			                                            MyTblAnimalDataCarcass.setQualityGrade(quality_grade)
			                                            MyTblAnimalDataCarcass.setPyg(pyg)
			                                            MyTblAnimalDataCarcass.setFatThickness(fat_thickness)
			                                            MyTblAnimalDataCarcass.setRibeyeArea(ribeye_area)
			                                            MyTblAnimalDataCarcass.setKph(kph)
			                                            MyTblAnimalDataCarcass.setInternalFat(internal_fat)
			                                            MyTblAnimalDataCarcass.setYieldGrade(yield_grade)
			                                            MyTblAnimalDataCarcass.setDaysOnFeed(days_on_feed)
			                                            MyTblAnimalDataCarcass.setCreateUser(create_user)
			                                            MyTblAnimalDataCarcass.setCreateDate(create_date)
			                                            MyTblAnimalDataCarcass.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_carcass", withFields: ["carcass_id", "animal_registration", "carcass_tag"], withHeaders: ["carcass_id", "animal_reg", "carcass_ta"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataCarcass");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalHealth
			                        if let tbl_animal_health = base_json["tbl_animal_health"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_health" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_health")
			                                TblAnimalHealth.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_health.count > 0 {
			                                for (var i = 0; i < tbl_animal_health.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_health = tbl_animal_health[i] as? NSDictionary {
                                        
			                                        let animal_health_id = get_tbl_animal_health["animal_health_id"] as? Int
			                                        let animal_registration = get_tbl_animal_health["animal_registration"] as? String
			                                        let date_administered2 = get_tbl_animal_health["date_administered"] as? String
			                                        let date_administered = Utils.convertToDateOpt(date_administered2)
			                                        let product_name = get_tbl_animal_health["product_name"] as? String
			                                        let serial_number = get_tbl_animal_health["serial_number"] as? String
			                                        let dosage = get_tbl_animal_health["dosage"] as? String
			                                        let application_location = get_tbl_animal_health["application_location"] as? String
			                                        let withdrawal_period = get_tbl_animal_health["withdrawal_period"] as? String
			                                        let administered_by = get_tbl_animal_health["administered_by"] as? String
			                                        let create_user = get_tbl_animal_health["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_health["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_health["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_health["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let lot_number = get_tbl_animal_health["lot_number"] as? String
			                                        let application_method = get_tbl_animal_health["application_method"] as? String
			                                        let expiration_date = get_tbl_animal_health["expiration_date"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalHealth = TblAnimalHealthData()
                                            
			                                            MyTblAnimalHealth.setAnimalHealthId(animal_health_id)
			                                            MyTblAnimalHealth.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalHealth.setDateAdministered(date_administered)
			                                            MyTblAnimalHealth.setProductName(product_name)
			                                            MyTblAnimalHealth.setSerialNumber(serial_number)
			                                            MyTblAnimalHealth.setDosage(dosage)
			                                            MyTblAnimalHealth.setApplicationLocation(application_location)
			                                            MyTblAnimalHealth.setWithdrawalPeriod(withdrawal_period)
			                                            MyTblAnimalHealth.setAdministeredBy(administered_by)
			                                            MyTblAnimalHealth.setCreateUser(create_user)
			                                            MyTblAnimalHealth.setCreateStamp(create_stamp)
			                                            MyTblAnimalHealth.setUpdateUser(update_user)
			                                            MyTblAnimalHealth.setUpdateStamp(update_stamp)
			                                            MyTblAnimalHealth.setLotNumber(lot_number)
			                                            MyTblAnimalHealth.setApplicationMethod(application_method)
			                                            MyTblAnimalHealth.setExpirationDate(expiration_date)
			                                            MyTblAnimalHealth.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_health", withFields: ["animal_health_id", "animal_registration", "date_administered"], withHeaders: ["animal_hea", "animal_reg", "date_admin"], withSizes: [25, 75, 50], withDataType: "TblAnimalHealth");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalNotes
			                        if let tbl_animal_notes = base_json["tbl_animal_notes"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_notes" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_notes")
			                                TblAnimalNotes.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_notes.count > 0 {
			                                for (var i = 0; i < tbl_animal_notes.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_notes = tbl_animal_notes[i] as? NSDictionary {
                                        
			                                        let comment_id = get_tbl_animal_notes["comment_id"] as? Int
			                                        let animal_registration = get_tbl_animal_notes["animal_registration"] as? String
			                                        let comment = get_tbl_animal_notes["comment"] as? String
			                                        let create_user = get_tbl_animal_notes["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_notes["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_notes["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_notes["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let deleted_flag = get_tbl_animal_notes["deleted_flag"] as? Int
			                                        let flag_notification = get_tbl_animal_notes["flag_notification"] as? Int
			                                        let flag_culled = get_tbl_animal_notes["flag_culled"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalNotes = TblAnimalNotesData()
                                            
			                                            MyTblAnimalNotes.setCommentId(comment_id)
			                                            MyTblAnimalNotes.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalNotes.setComment(comment)
			                                            MyTblAnimalNotes.setCreateUser(create_user)
			                                            MyTblAnimalNotes.setCreateStamp(create_stamp)
			                                            MyTblAnimalNotes.setUpdateUser(update_user)
			                                            MyTblAnimalNotes.setUpdateStamp(update_stamp)
			                                            MyTblAnimalNotes.setDeletedFlag(deleted_flag)
			                                            MyTblAnimalNotes.setFlagNotification(flag_notification)
			                                            MyTblAnimalNotes.setFlagCulled(flag_culled)
			                                            MyTblAnimalNotes.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_notes", withFields: ["comment_id", "animal_registration", "deleted_flag"], withHeaders: ["comment_id", "animal_reg", "del"], withSizes: [25, 75, 50], withDataType: "TblAnimalNotes");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalHeat
			                        if let tbl_animal_heat = base_json["tbl_animal_heat"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_heat" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_heat")
			                                TblAnimalHeat.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_heat.count > 0 {
			                                for (var i = 0; i < tbl_animal_heat.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_heat = tbl_animal_heat[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_animal_heat["pk_id"] as? Int
			                                        let owner_id = get_tbl_animal_heat["owner_id"] as? Int
			                                        let animal_registration = get_tbl_animal_heat["animal_registration"] as? String
			                                        let animal_phn = get_tbl_animal_heat["animal_phn"] as? String
			                                        let heat_date2 = get_tbl_animal_heat["heat_date"] as? String
			                                        let heat_date = Utils.convertToDateOpt(heat_date2)
			                                        let am_pm = get_tbl_animal_heat["am_pm"] as? String
			                                        let create_user = get_tbl_animal_heat["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_heat["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_heat["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_heat["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalHeat = TblAnimalHeatData()
                                            
			                                            MyTblAnimalHeat.setPkId(pk_id)
			                                            MyTblAnimalHeat.setOwnerId(owner_id)
			                                            MyTblAnimalHeat.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalHeat.setAnimalPhn(animal_phn)
			                                            MyTblAnimalHeat.setHeatDate(heat_date)
			                                            MyTblAnimalHeat.setAmPm(am_pm)
			                                            MyTblAnimalHeat.setCreateUser(create_user)
			                                            MyTblAnimalHeat.setCreateStamp(create_stamp)
			                                            MyTblAnimalHeat.setUpdateUser(update_user)
			                                            MyTblAnimalHeat.setUpdateStamp(update_stamp)
			                                            MyTblAnimalHeat.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_heat", withFields: ["pk_id", "owner_id", "animal_registration"], withHeaders: ["pk_id", "owner_id", "animal_reg"], withSizes: [25, 75, 50], withDataType: "TblAnimalHeat");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalSync
			                        if let tbl_animal_sync = base_json["tbl_animal_sync"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_sync" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_sync")
			                                TblAnimalSync.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_sync.count > 0 {
			                                for (var i = 0; i < tbl_animal_sync.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_sync = tbl_animal_sync[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_animal_sync["pk_id"] as? Int
			                                        let owner_id = get_tbl_animal_sync["owner_id"] as? Int
			                                        let animal_registration = get_tbl_animal_sync["animal_registration"] as? String
			                                        let animal_phn = get_tbl_animal_sync["animal_phn"] as? String
			                                        let sync_date2 = get_tbl_animal_sync["sync_date"] as? String
			                                        let sync_date = Utils.convertToDateOpt(sync_date2)
			                                        let create_user = get_tbl_animal_sync["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_sync["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_sync["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_sync["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let comment = get_tbl_animal_sync["comment"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalSync = TblAnimalSyncData()
                                            
			                                            MyTblAnimalSync.setPkId(pk_id)
			                                            MyTblAnimalSync.setOwnerId(owner_id)
			                                            MyTblAnimalSync.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalSync.setAnimalPhn(animal_phn)
			                                            MyTblAnimalSync.setSyncDate(sync_date)
			                                            MyTblAnimalSync.setCreateUser(create_user)
			                                            MyTblAnimalSync.setCreateStamp(create_stamp)
			                                            MyTblAnimalSync.setUpdateUser(update_user)
			                                            MyTblAnimalSync.setUpdateStamp(update_stamp)
			                                            MyTblAnimalSync.setComment(comment)
			                                            MyTblAnimalSync.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_sync", withFields: ["pk_id", "owner_id", "animal_registration"], withHeaders: ["pk_id", "owner_id", "animal_reg"], withSizes: [25, 75, 50], withDataType: "TblAnimalSync");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataOtherWeight
			                        if let tbl_animal_data_other_weight = base_json["tbl_animal_data_other_weight"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_other_weight" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_data_other_weight")
			                                TblAnimalDataOtherWeight.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_other_weight.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_other_weight.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_other_weight = tbl_animal_data_other_weight[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_other_weight["animal_registration"] as? String
			                                        let measurement_date2 = get_tbl_animal_data_other_weight["measurement_date"] as? String
			                                        let measurement_date = Utils.convertToDateOpt(measurement_date2)
			                                        let weight = get_tbl_animal_data_other_weight["weight"] as? Int
			                                        let height = get_tbl_animal_data_other_weight["height"] as? Int
			                                        let body_condition_score = get_tbl_animal_data_other_weight["body_condition_score"] as? Int
			                                        let create_user = get_tbl_animal_data_other_weight["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_other_weight["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_other_weight["update_user"] as? String
			                                        let update_date2 = get_tbl_animal_data_other_weight["update_date"] as? String
			                                        let update_date = Utils.convertToDateOpt(update_date2)
			                                        let work_order = get_tbl_animal_data_other_weight["work_order"] as? String
			                                        let commit_lock_id = get_tbl_animal_data_other_weight["commit_lock_id"] as? Int
			                                        let contemporary_group = get_tbl_animal_data_other_weight["contemporary_group"] as? Int
			                                        let sub_contemporary_group = get_tbl_animal_data_other_weight["sub_contemporary_group"] as? Int
			                                        let premise_id = get_tbl_animal_data_other_weight["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_other_weight["pasture_id"] as? String
			                                        let management_group = get_tbl_animal_data_other_weight["management_group"] as? Int
			                                        let feed_code = get_tbl_animal_data_other_weight["feed_code"] as? Int
			                                        let _id = get_tbl_animal_data_other_weight["_id"] as? Int
			                                        let phn = get_tbl_animal_data_other_weight["phn"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataOtherWeight = TblAnimalDataOtherWeightData()
                                            
			                                            MyTblAnimalDataOtherWeight.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataOtherWeight.setMeasurementDate(measurement_date)
			                                            MyTblAnimalDataOtherWeight.setWeight(weight)
			                                            MyTblAnimalDataOtherWeight.setHeight(height)
			                                            MyTblAnimalDataOtherWeight.setBodyConditionScore(body_condition_score)
			                                            MyTblAnimalDataOtherWeight.setCreateUser(create_user)
			                                            MyTblAnimalDataOtherWeight.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataOtherWeight.setUpdateUser(update_user)
			                                            MyTblAnimalDataOtherWeight.setUpdateDate(update_date)
			                                            MyTblAnimalDataOtherWeight.setWorkOrder(work_order)
			                                            MyTblAnimalDataOtherWeight.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataOtherWeight.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataOtherWeight.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataOtherWeight.setPremiseId(premise_id)
			                                            MyTblAnimalDataOtherWeight.setPastureId(pasture_id)
			                                            MyTblAnimalDataOtherWeight.setManagementGroup(management_group)
			                                            MyTblAnimalDataOtherWeight.setFeedCode(feed_code)
			                                            MyTblAnimalDataOtherWeight.setId(_id)
			                                            MyTblAnimalDataOtherWeight.setPhn(phn)
			                                            MyTblAnimalDataOtherWeight.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_other_weight", withFields: ["animal_registration", "measurement_date", "weight"], withHeaders: ["animal_reg", "measuremen", "weight"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataOtherWeight");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalDataMature
			                        if let tbl_animal_data_mature = base_json["tbl_animal_data_mature"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_data_mature" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_data_mature")
			                                TblAnimalDataMature.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_data_mature.count > 0 {
			                                for (var i = 0; i < tbl_animal_data_mature.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_data_mature = tbl_animal_data_mature[i] as? NSDictionary {
                                        
			                                        let animal_registration = get_tbl_animal_data_mature["animal_registration"] as? String
			                                        let measurement_date2 = get_tbl_animal_data_mature["measurement_date"] as? String
			                                        let measurement_date = Utils.convertToDateOpt(measurement_date2)
			                                        let weight = get_tbl_animal_data_mature["weight"] as? Int
			                                        let height = get_tbl_animal_data_mature["height"] as? Double
			                                        let body_condition_score = get_tbl_animal_data_mature["body_condition_score"] as? Int
			                                        let create_user = get_tbl_animal_data_mature["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_data_mature["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_data_mature["update_user"] as? String
			                                        let update_date2 = get_tbl_animal_data_mature["update_date"] as? String
			                                        let update_date = Utils.convertToDateOpt(update_date2)
			                                        let work_order = get_tbl_animal_data_mature["work_order"] as? String
			                                        let commit_lock_id = get_tbl_animal_data_mature["commit_lock_id"] as? Int
			                                        let contemporary_group = get_tbl_animal_data_mature["contemporary_group"] as? Int
			                                        let sub_contemporary_group = get_tbl_animal_data_mature["sub_contemporary_group"] as? Int
			                                        let premise_id = get_tbl_animal_data_mature["premise_id"] as? String
			                                        let pasture_id = get_tbl_animal_data_mature["pasture_id"] as? String
			                                        let management_group = get_tbl_animal_data_mature["management_group"] as? Int
			                                        let feed_code = get_tbl_animal_data_mature["feed_code"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalDataMature = TblAnimalDataMatureData()
                                            
			                                            MyTblAnimalDataMature.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalDataMature.setMeasurementDate(measurement_date)
			                                            MyTblAnimalDataMature.setWeight(weight)
			                                            MyTblAnimalDataMature.setHeight(height)
			                                            MyTblAnimalDataMature.setBodyConditionScore(body_condition_score)
			                                            MyTblAnimalDataMature.setCreateUser(create_user)
			                                            MyTblAnimalDataMature.setCreateStamp(create_stamp)
			                                            MyTblAnimalDataMature.setUpdateUser(update_user)
			                                            MyTblAnimalDataMature.setUpdateDate(update_date)
			                                            MyTblAnimalDataMature.setWorkOrder(work_order)
			                                            MyTblAnimalDataMature.setCommitLockId(commit_lock_id)
			                                            MyTblAnimalDataMature.setContemporaryGroup(contemporary_group)
			                                            MyTblAnimalDataMature.setSubContemporaryGroup(sub_contemporary_group)
			                                            MyTblAnimalDataMature.setPremiseId(premise_id)
			                                            MyTblAnimalDataMature.setPastureId(pasture_id)
			                                            MyTblAnimalDataMature.setManagementGroup(management_group)
			                                            MyTblAnimalDataMature.setFeedCode(feed_code)
			                                            MyTblAnimalDataMature.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_data_mature", withFields: ["animal_registration", "measurement_date", "weight"], withHeaders: ["animal_reg", "measuremen", "weight"], withSizes: [25, 75, 50], withDataType: "TblAnimalDataMature");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalPhoto
			                        if let tbl_animal_photo = base_json["tbl_animal_photo"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_photo" {
                                        
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_photo")
			                                TblAnimalPhoto.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_photo.count > 0 {
			                                for (var i = 0; i < tbl_animal_photo.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_photo = tbl_animal_photo[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_animal_photo["pk_id"] as? Int
			                                        let animal_registration = get_tbl_animal_photo["animal_registration"] as? String
			                                        let photo = get_tbl_animal_photo["photo"] as? String
			                                        let is_primary = get_tbl_animal_photo["is_primary"] as? Int
			                                        let create_user = get_tbl_animal_photo["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_photo["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_photo["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_photo["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let hide_from_rotation = get_tbl_animal_photo["hide_from_rotation"] as? Int
			                                        let comment = get_tbl_animal_photo["comment"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalPhoto = TblAnimalPhotoData()
                                            
			                                            MyTblAnimalPhoto.setPkId(pk_id)
			                                            MyTblAnimalPhoto.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalPhoto.setPhoto(photo)
			                                            MyTblAnimalPhoto.setIsPrimary(is_primary)
			                                            MyTblAnimalPhoto.setCreateUser(create_user)
			                                            MyTblAnimalPhoto.setCreateStamp(create_stamp)
			                                            MyTblAnimalPhoto.setUpdateUser(update_user)
			                                            MyTblAnimalPhoto.setUpdateStamp(update_stamp)
			                                            MyTblAnimalPhoto.setHideFromRotation(hide_from_rotation)
			                                            MyTblAnimalPhoto.setComment(comment)
			                                            MyTblAnimalPhoto.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_photo", withFields: ["pk_id", "animal_registration", "photo"], withHeaders: ["pk_id", "animal_reg", "photo"], withSizes: [25, 75, 50], withDataType: "TblAnimalPhoto");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalPastureLocation
			                        if let tbl_animal_location = base_json["tbl_animal_location"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_location" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_location")
			                                TblAnimalPastureLocation.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_location.count > 0 {
			                                for (var i = 0; i < tbl_animal_location.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_location = tbl_animal_location[i] as? NSDictionary {
                                        
			                                        let animal_location_id = get_tbl_animal_location["animal_location_id"] as? Int
			                                        let animal_registration = get_tbl_animal_location["animal_registration"] as? String
			                                        let pasture_id = get_tbl_animal_location["pasture_id"] as? String
			                                        let move_in_date2 = get_tbl_animal_location["move_in_date"] as? String
			                                        let move_in_date = Utils.convertToDateOpt(move_in_date2)
			                                        let move_out_date2 = get_tbl_animal_location["move_out_date"] as? String
			                                        let move_out_date = Utils.convertToDateOpt(move_out_date2)
			                                        let create_user = get_tbl_animal_location["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_location["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_location["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_location["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let can_breed = get_tbl_animal_location["can_breed"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalPastureLocation = TblAnimalPastureLocationData()
                                            
			                                            MyTblAnimalPastureLocation.setAnimalLocationId(animal_location_id)
			                                            MyTblAnimalPastureLocation.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalPastureLocation.setPastureId(pasture_id)
			                                            MyTblAnimalPastureLocation.setMoveInDate(move_in_date)
			                                            MyTblAnimalPastureLocation.setMoveOutDate(move_out_date)
			                                            MyTblAnimalPastureLocation.setCreateUser(create_user)
			                                            MyTblAnimalPastureLocation.setCreateStamp(create_stamp)
			                                            MyTblAnimalPastureLocation.setUpdateUser(update_user)
			                                            MyTblAnimalPastureLocation.setUpdateStamp(update_stamp)
			                                            MyTblAnimalPastureLocation.setCanBreed(can_breed)
			                                            MyTblAnimalPastureLocation.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_location", withFields: ["animal_location_id", "animal_registration", "pasture_id"], withHeaders: ["animal_loc", "animal_reg", "pasture_id"], withSizes: [25, 75, 50], withDataType: "TblAnimalPastureLocation");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalPenLocation
			                        if let tbl_animal_pen_location = base_json["tbl_animal_pen_location"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_pen_location" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_pen_location")
			                                TblAnimalPenLocation.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_pen_location.count > 0 {
			                                for (var i = 0; i < tbl_animal_pen_location.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_pen_location = tbl_animal_pen_location[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_animal_pen_location["pk_id"] as? Int
			                                        let animal_registration = get_tbl_animal_pen_location["animal_registration"] as? String
			                                        let member_id = get_tbl_animal_pen_location["member_id"] as? String
			                                        let pen_id = get_tbl_animal_pen_location["pen_id"] as? Int
			                                        let move_in_date2 = get_tbl_animal_pen_location["move_in_date"] as? String
			                                        let move_in_date = Utils.convertToDateOpt(move_in_date2)
			                                        let move_out_date2 = get_tbl_animal_pen_location["move_out_date"] as? String
			                                        let move_out_date = Utils.convertToDateOpt(move_out_date2)
			                                        let expired = get_tbl_animal_pen_location["expired"] as? Int
			                                        let create_user = get_tbl_animal_pen_location["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_pen_location["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_pen_location["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_pen_location["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalPenLocation = TblAnimalPenLocationData()
                                            
			                                            MyTblAnimalPenLocation.setPkId(pk_id)
			                                            MyTblAnimalPenLocation.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalPenLocation.setMemberId(member_id)
			                                            MyTblAnimalPenLocation.setPenId(pen_id)
			                                            MyTblAnimalPenLocation.setMoveInDate(move_in_date)
			                                            MyTblAnimalPenLocation.setMoveOutDate(move_out_date)
			                                            MyTblAnimalPenLocation.setExpired(expired)
			                                            MyTblAnimalPenLocation.setCreateUser(create_user)
			                                            MyTblAnimalPenLocation.setCreateStamp(create_stamp)
			                                            MyTblAnimalPenLocation.setUpdateUser(update_user)
			                                            MyTblAnimalPenLocation.setUpdateStamp(update_stamp)
			                                            MyTblAnimalPenLocation.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_pen_location", withFields: ["pk_id", "animal_registration", "member_id"], withHeaders: ["pk_id", "animal_reg", "member_id"], withSizes: [25, 75, 50], withDataType: "TblAnimalPenLocation");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblAnimalAssessment
			                        if let tbl_animal_assessment = base_json["tbl_animal_assessment"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_animal_assessment" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_animal_assessment")
			                                TblAnimalAssessment.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_animal_assessment.count > 0 {
			                                for (var i = 0; i < tbl_animal_assessment.count; i += 1 ) {
                                    
			                                    if let get_tbl_animal_assessment = tbl_animal_assessment[i] as? NSDictionary {
                                        
			                                        let animal_assessment_id = get_tbl_animal_assessment["animal_assessment_id"] as? Int
			                                        let animal_registration = get_tbl_animal_assessment["animal_registration"] as? String
			                                        let owner_id = get_tbl_animal_assessment["owner_id"] as? Int
			                                        let assessment_year = get_tbl_animal_assessment["assessment_year"] as? Double
			                                        let assessment_season = get_tbl_animal_assessment["assessment_season"] as? String
			                                        let create_user = get_tbl_animal_assessment["create_user"] as? String
			                                        let create_stamp2 = get_tbl_animal_assessment["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_animal_assessment["update_user"] as? String
			                                        let update_stamp2 = get_tbl_animal_assessment["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let calf_registration = get_tbl_animal_assessment["calf_registration"] as? String
			                                        let calf_registration_date2 = get_tbl_animal_assessment["calf_registration_date"] as? String
			                                        let calf_registration_date = Utils.convertToDateOpt(calf_registration_date2)
			                                        let calf_transfer_date2 = get_tbl_animal_assessment["calf_transfer_date"] as? String
			                                        let calf_transfer_date = Utils.convertToDateOpt(calf_transfer_date2)
			                                        let invoice_id = get_tbl_animal_assessment["invoice_id"] as? Int
			                                        let work_order = get_tbl_animal_assessment["work_order"] as? Int
			                                        let validation_date2 = get_tbl_animal_assessment["validation_date"] as? String
			                                        let validation_date = Utils.convertToDateOpt(validation_date2)
			                                        let animal_sex = get_tbl_animal_assessment["animal_sex"] as? String
			                                        let confirmed_by = get_tbl_animal_assessment["confirmed_by"] as? String
			                                        let confirmed_on2 = get_tbl_animal_assessment["confirmed_on"] as? String
			                                        let confirmed_on = Utils.convertToDateOpt(confirmed_on2)
			                                        let non_calving_status_code = get_tbl_animal_assessment["non_calving_status_code"] as? Int
			                                        let assessment_invoiced_to = get_tbl_animal_assessment["assessment_invoiced_to"] as? Int
			                                        let calf_wean_date2 = get_tbl_animal_assessment["calf_wean_date"] as? String
			                                        let calf_wean_date = Utils.convertToDateOpt(calf_wean_date2)
			                                        let calf_prewean_disposal_code = get_tbl_animal_assessment["calf_prewean_disposal_code"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblAnimalAssessment = TblAnimalAssessmentData()
                                            
			                                            MyTblAnimalAssessment.setAnimalAssessmentId(animal_assessment_id)
			                                            MyTblAnimalAssessment.setAnimalRegistration(animal_registration)
			                                            MyTblAnimalAssessment.setOwnerId(owner_id)
			                                            MyTblAnimalAssessment.setAssessmentYear(assessment_year)
			                                            MyTblAnimalAssessment.setAssessmentSeason(assessment_season)
			                                            MyTblAnimalAssessment.setCreateUser(create_user)
			                                            MyTblAnimalAssessment.setCreateStamp(create_stamp)
			                                            MyTblAnimalAssessment.setUpdateUser(update_user)
			                                            MyTblAnimalAssessment.setUpdateStamp(update_stamp)
			                                            MyTblAnimalAssessment.setCalfRegistration(calf_registration)
			                                            MyTblAnimalAssessment.setCalfRegistrationDate(calf_registration_date)
			                                            MyTblAnimalAssessment.setCalfTransferDate(calf_transfer_date)
			                                            MyTblAnimalAssessment.setInvoiceId(invoice_id)
			                                            MyTblAnimalAssessment.setWorkOrder(work_order)
			                                            MyTblAnimalAssessment.setValidationDate(validation_date)
			                                            MyTblAnimalAssessment.setAnimalSex(animal_sex)
			                                            MyTblAnimalAssessment.setConfirmedBy(confirmed_by)
			                                            MyTblAnimalAssessment.setConfirmedOn(confirmed_on)
			                                            MyTblAnimalAssessment.setNonCalvingStatusCode(non_calving_status_code)
			                                            MyTblAnimalAssessment.setAssessmentInvoicedTo(assessment_invoiced_to)
			                                            MyTblAnimalAssessment.setCalfWeanDate(calf_wean_date)
			                                            MyTblAnimalAssessment.setCalfPreweanDisposalCode(calf_prewean_disposal_code)
			                                            MyTblAnimalAssessment.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_animal_assessment", withFields: ["animal_assessment_id", "animal_registration", "owner_id"], withHeaders: ["animal_ass", "animal_reg", "owner_id"], withSizes: [25, 75, 50], withDataType: "TblAnimalAssessment");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblBreedingAi
			                        if let tbl_breeding_ai = base_json["tbl_breeding_ai"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_breeding_ai" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_breeding_ai")
			                                TblBreedingAi.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_breeding_ai.count > 0 {
			                                for (var i = 0; i < tbl_breeding_ai.count; i += 1 ) {
                                    
			                                    if let get_tbl_breeding_ai = tbl_breeding_ai[i] as? NSDictionary {
                                        
			                                        let breeding_ai_id = get_tbl_breeding_ai["breeding_ai_id"] as? Int
			                                        let cow_owner_id = get_tbl_breeding_ai["cow_owner_id"] as? Int
			                                        let old_owner_id = get_tbl_breeding_ai["old_owner_id"] as? Int
			                                        let bull_registration = get_tbl_breeding_ai["bull_registration"] as? String
			                                        let ai_date2 = get_tbl_breeding_ai["ai_date"] as? String
			                                        let ai_date = Utils.convertToDateOpt(ai_date2)
			                                        let create_user = get_tbl_breeding_ai["create_user"] as? String
			                                        let create_stamp2 = get_tbl_breeding_ai["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_breeding_ai["update_user"] as? String
			                                        let update_stamp2 = get_tbl_breeding_ai["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let cow_registration = get_tbl_breeding_ai["cow_registration"] as? String
			                                        let work_order = get_tbl_breeding_ai["work_order"] as? String
			                                        let calf = get_tbl_breeding_ai["calf"] as? String
			                                        let non_calving_reason = get_tbl_breeding_ai["non_calving_reason"] as? String
			                                        let palpation_result = get_tbl_breeding_ai["palpation_result"] as? String
			                                        let palpation_date2 = get_tbl_breeding_ai["palpation_date"] as? String
			                                        let palpation_date = Utils.convertToDateOpt(palpation_date2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblBreedingAi = TblBreedingAiData()
                                            
			                                            MyTblBreedingAi.setBreedingAiId(breeding_ai_id)
			                                            MyTblBreedingAi.setCowOwnerId(cow_owner_id)
			                                            MyTblBreedingAi.setOldOwnerId(old_owner_id)
			                                            MyTblBreedingAi.setBullRegistration(bull_registration)
			                                            MyTblBreedingAi.setAiDate(ai_date)
			                                            MyTblBreedingAi.setCreateUser(create_user)
			                                            MyTblBreedingAi.setCreateStamp(create_stamp)
			                                            MyTblBreedingAi.setUpdateUser(update_user)
			                                            MyTblBreedingAi.setUpdateStamp(update_stamp)
			                                            MyTblBreedingAi.setCowRegistration(cow_registration)
			                                            MyTblBreedingAi.setWorkOrder(work_order)
			                                            MyTblBreedingAi.setCalf(calf)
			                                            MyTblBreedingAi.setNonCalvingReason(non_calving_reason)
			                                            MyTblBreedingAi.setPalpationResult(palpation_result)
			                                            MyTblBreedingAi.setPalpationDate(palpation_date)
			                                            MyTblBreedingAi.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_breeding_ai", withFields: ["breeding_ai_id", "cow_owner_id", "old_owner_id"], withHeaders: ["breeding_a", "cow_owner_", "old_owner_"], withSizes: [25, 75, 50], withDataType: "TblBreedingAi");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblBreedingNs
			                        if let tbl_breeding_agreement = base_json["tbl_breeding_agreement"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_breeding_agreement" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_breeding_agreement")
			                                TblBreedingNs.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_breeding_agreement.count > 0 {
			                                for (var i = 0; i < tbl_breeding_agreement.count; i += 1 ) {
                                    
			                                    if let get_tbl_breeding_agreement = tbl_breeding_agreement[i] as? NSDictionary {
                                        
			                                        let breeding_agreement_id = get_tbl_breeding_agreement["breeding_agreement_id"] as? Int
			                                        let cow_owner_id = get_tbl_breeding_agreement["cow_owner_id"] as? Int
			                                        let bull_owner_id = get_tbl_breeding_agreement["bull_owner_id"] as? Int
			                                        let bull_registration = get_tbl_breeding_agreement["bull_registration"] as? String
			                                        let begin_date2 = get_tbl_breeding_agreement["begin_date"] as? String
			                                        let begin_date = Utils.convertToDateOpt(begin_date2)
			                                        let end_date2 = get_tbl_breeding_agreement["end_date"] as? String
			                                        let end_date = Utils.convertToDateOpt(end_date2)
			                                        let create_user = get_tbl_breeding_agreement["create_user"] as? String
			                                        let create_stamp2 = get_tbl_breeding_agreement["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_breeding_agreement["update_user"] as? String
			                                        let update_stamp2 = get_tbl_breeding_agreement["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let cow_registration = get_tbl_breeding_agreement["cow_registration"] as? String
			                                        let work_order = get_tbl_breeding_agreement["work_order"] as? String
			                                        let calf = get_tbl_breeding_agreement["calf"] as? String
			                                        let non_calving_reason = get_tbl_breeding_agreement["non_calving_reason"] as? String
			                                        let palpation_result = get_tbl_breeding_agreement["palpation_result"] as? String
			                                        let palpation_date2 = get_tbl_breeding_agreement["palpation_date"] as? String
			                                        let palpation_date = Utils.convertToDateOpt(palpation_date2)
			                                        let pasture_id = get_tbl_breeding_agreement["pasture_id"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblBreedingNs = TblBreedingNsData()
                                            
			                                            MyTblBreedingNs.setBreedingAgreementId(breeding_agreement_id)
			                                            MyTblBreedingNs.setCowOwnerId(cow_owner_id)
			                                            MyTblBreedingNs.setBullOwnerId(bull_owner_id)
			                                            MyTblBreedingNs.setBullRegistration(bull_registration)
			                                            MyTblBreedingNs.setBeginDate(begin_date)
			                                            MyTblBreedingNs.setEndDate(end_date)
			                                            MyTblBreedingNs.setCreateUser(create_user)
			                                            MyTblBreedingNs.setCreateStamp(create_stamp)
			                                            MyTblBreedingNs.setUpdateUser(update_user)
			                                            MyTblBreedingNs.setUpdateStamp(update_stamp)
			                                            MyTblBreedingNs.setCowRegistration(cow_registration)
			                                            MyTblBreedingNs.setWorkOrder(work_order)
			                                            MyTblBreedingNs.setCalf(calf)
			                                            MyTblBreedingNs.setNonCalvingReason(non_calving_reason)
			                                            MyTblBreedingNs.setPalpationResult(palpation_result)
			                                            MyTblBreedingNs.setPalpationDate(palpation_date)
			                                            MyTblBreedingNs.setPastureId(pasture_id)
			                                            MyTblBreedingNs.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_breeding_agreement", withFields: ["breeding_agreement_id", "cow_owner_id", "bull_owner_id"], withHeaders: ["breeding_a", "cow_owner_", "bull_owner"], withSizes: [25, 75, 50], withDataType: "TblBreedingNs");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblBreedingEt
			                        if let tbl_breeding_et = base_json["tbl_breeding_et"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_breeding_et" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_breeding_et")
			                                TblBreedingEt.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_breeding_et.count > 0 {
			                                for (var i = 0; i < tbl_breeding_et.count; i += 1 ) {
                                    
			                                    if let get_tbl_breeding_et = tbl_breeding_et[i] as? NSDictionary {
                                        
			                                        let breeding_et_id = get_tbl_breeding_et["breeding_et_id"] as? Int
			                                        let cow_owner_id = get_tbl_breeding_et["cow_owner_id"] as? Int
			                                        let old_owner_id = get_tbl_breeding_et["old_owner_id"] as? Int
			                                        let bull_registration = get_tbl_breeding_et["bull_registration"] as? String
			                                        let transfer_date2 = get_tbl_breeding_et["transfer_date"] as? String
			                                        let transfer_date = Utils.convertToDateOpt(transfer_date2)
			                                        let create_user = get_tbl_breeding_et["create_user"] as? String
			                                        let create_stamp2 = get_tbl_breeding_et["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_breeding_et["update_user"] as? String
			                                        let update_stamp2 = get_tbl_breeding_et["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let cow_registration = get_tbl_breeding_et["cow_registration"] as? String
			                                        let recip_registration = get_tbl_breeding_et["recip_registration"] as? String
			                                        let work_order = get_tbl_breeding_et["work_order"] as? String
			                                        let calf = get_tbl_breeding_et["calf"] as? String
			                                        let non_calving_reason = get_tbl_breeding_et["non_calving_reason"] as? String
			                                        let flush_date2 = get_tbl_breeding_et["flush_date"] as? String
			                                        let flush_date = Utils.convertToDateOpt(flush_date2)
			                                        let palpation_result = get_tbl_breeding_et["palpation_result"] as? String
			                                        let palpation_date2 = get_tbl_breeding_et["palpation_date"] as? String
			                                        let palpation_date = Utils.convertToDateOpt(palpation_date2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblBreedingEt = TblBreedingEtData()
                                            
			                                            MyTblBreedingEt.setBreedingEtId(breeding_et_id)
			                                            MyTblBreedingEt.setCowOwnerId(cow_owner_id)
			                                            MyTblBreedingEt.setOldOwnerId(old_owner_id)
			                                            MyTblBreedingEt.setBullRegistration(bull_registration)
			                                            MyTblBreedingEt.setTransferDate(transfer_date)
			                                            MyTblBreedingEt.setCreateUser(create_user)
			                                            MyTblBreedingEt.setCreateStamp(create_stamp)
			                                            MyTblBreedingEt.setUpdateUser(update_user)
			                                            MyTblBreedingEt.setUpdateStamp(update_stamp)
			                                            MyTblBreedingEt.setCowRegistration(cow_registration)
			                                            MyTblBreedingEt.setRecipRegistration(recip_registration)
			                                            MyTblBreedingEt.setWorkOrder(work_order)
			                                            MyTblBreedingEt.setCalf(calf)
			                                            MyTblBreedingEt.setNonCalvingReason(non_calving_reason)
			                                            MyTblBreedingEt.setFlushDate(flush_date)
			                                            MyTblBreedingEt.setPalpationResult(palpation_result)
			                                            MyTblBreedingEt.setPalpationDate(palpation_date)
			                                            MyTblBreedingEt.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_breeding_et", withFields: ["breeding_et_id", "cow_owner_id", "old_owner_id"], withHeaders: ["breeding_e", "cow_owner_", "old_owner_"], withSizes: [25, 75, 50], withDataType: "TblBreedingEt");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblInventorySemen
			                        if let tbl_semen_inventory = base_json["tbl_semen_inventory"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_semen_inventory" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_semen_inventory")
			                                TblInventorySemen.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_semen_inventory.count > 0 {
			                                for (var i = 0; i < tbl_semen_inventory.count; i += 1 ) {
                                    
			                                    if let get_tbl_semen_inventory = tbl_semen_inventory[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_semen_inventory["pk_id"] as? Int
			                                        let member_id = get_tbl_semen_inventory["member_id"] as? Int
			                                        let animal_registration = get_tbl_semen_inventory["animal_registration"] as? String
			                                        let tank_id = get_tbl_semen_inventory["tank_id"] as? String
			                                        let canister_id = get_tbl_semen_inventory["canister_id"] as? String
			                                        let cane_code = get_tbl_semen_inventory["cane_code"] as? String
			                                        let css_certified = get_tbl_semen_inventory["css_certified"] as? Int
			                                        let straws = get_tbl_semen_inventory["straws"] as? Int
			                                        let create_user = get_tbl_semen_inventory["create_user"] as? String
			                                        let create_stamp2 = get_tbl_semen_inventory["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_semen_inventory["update_user"] as? String
			                                        let update_stamp2 = get_tbl_semen_inventory["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let for_sale_private_treaty = get_tbl_semen_inventory["for_sale_private_treaty"] as? Int
			                                        let private_treaty_date2 = get_tbl_semen_inventory["private_treaty_date"] as? String
			                                        let private_treaty_date = Utils.convertToDateOpt(private_treaty_date2)
			                                        let seller_comments = get_tbl_semen_inventory["seller_comments"] as? String
			                                        let sale_price = get_tbl_semen_inventory["sale_price"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblInventorySemen = TblInventorySemenData()
                                            
			                                            MyTblInventorySemen.setPkId(pk_id)
			                                            MyTblInventorySemen.setMemberId(member_id)
			                                            MyTblInventorySemen.setAnimalRegistration(animal_registration)
			                                            MyTblInventorySemen.setTankId(tank_id)
			                                            MyTblInventorySemen.setCanisterId(canister_id)
			                                            MyTblInventorySemen.setCaneCode(cane_code)
			                                            MyTblInventorySemen.setCssCertified(css_certified)
			                                            MyTblInventorySemen.setStraws(straws)
			                                            MyTblInventorySemen.setCreateUser(create_user)
			                                            MyTblInventorySemen.setCreateStamp(create_stamp)
			                                            MyTblInventorySemen.setUpdateUser(update_user)
			                                            MyTblInventorySemen.setUpdateStamp(update_stamp)
			                                            MyTblInventorySemen.setForSalePrivateTreaty(for_sale_private_treaty)
			                                            MyTblInventorySemen.setPrivateTreatyDate(private_treaty_date)
			                                            MyTblInventorySemen.setSellerComments(seller_comments)
			                                            MyTblInventorySemen.setSalePrice(sale_price)
			                                            MyTblInventorySemen.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_semen_inventory", withFields: ["pk_id", "member_id", "animal_registration"], withHeaders: ["pk_id", "member_id", "animal_reg"], withSizes: [25, 75, 50], withDataType: "TblInventorySemen");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblInventoryEmbryo
			                        if let tbl_embryo_inventory = base_json["tbl_embryo_inventory"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_embryo_inventory" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_embryo_inventory")
			                                TblInventoryEmbryo.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_embryo_inventory.count > 0 {
			                                for (var i = 0; i < tbl_embryo_inventory.count; i += 1 ) {
                                    
			                                    if let get_tbl_embryo_inventory = tbl_embryo_inventory[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_embryo_inventory["pk_id"] as? Int
			                                        let member_id = get_tbl_embryo_inventory["member_id"] as? Int
			                                        let dam_registration = get_tbl_embryo_inventory["dam_registration"] as? String
			                                        let sire_registration = get_tbl_embryo_inventory["sire_registration"] as? String
			                                        let tank_id = get_tbl_embryo_inventory["tank_id"] as? String
			                                        let canister_id = get_tbl_embryo_inventory["canister_id"] as? String
			                                        let cane_code = get_tbl_embryo_inventory["cane_code"] as? String
			                                        let exportable = get_tbl_embryo_inventory["exportable"] as? Int
			                                        let quantity = get_tbl_embryo_inventory["quantity"] as? Int
			                                        let create_user = get_tbl_embryo_inventory["create_user"] as? String
			                                        let create_stamp2 = get_tbl_embryo_inventory["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_embryo_inventory["update_user"] as? String
			                                        let update_stamp2 = get_tbl_embryo_inventory["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let flush_date2 = get_tbl_embryo_inventory["flush_date"] as? String
			                                        let flush_date = Utils.convertToDateOpt(flush_date2)
			                                        let for_sale_private_treaty = get_tbl_embryo_inventory["for_sale_private_treaty"] as? Int
			                                        let private_treaty_date2 = get_tbl_embryo_inventory["private_treaty_date"] as? String
			                                        let private_treaty_date = Utils.convertToDateOpt(private_treaty_date2)
			                                        let seller_comments = get_tbl_embryo_inventory["seller_comments"] as? String
			                                        let sale_price = get_tbl_embryo_inventory["sale_price"] as? Int
			                                        let breeder_id = get_tbl_embryo_inventory["breeder_id"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblInventoryEmbryo = TblInventoryEmbryoData()
                                            
			                                            MyTblInventoryEmbryo.setPkId(pk_id)
			                                            MyTblInventoryEmbryo.setMemberId(member_id)
			                                            MyTblInventoryEmbryo.setDamRegistration(dam_registration)
			                                            MyTblInventoryEmbryo.setSireRegistration(sire_registration)
			                                            MyTblInventoryEmbryo.setTankId(tank_id)
			                                            MyTblInventoryEmbryo.setCanisterId(canister_id)
			                                            MyTblInventoryEmbryo.setCaneCode(cane_code)
			                                            MyTblInventoryEmbryo.setExportable(exportable)
			                                            MyTblInventoryEmbryo.setQuantity(quantity)
			                                            MyTblInventoryEmbryo.setCreateUser(create_user)
			                                            MyTblInventoryEmbryo.setCreateStamp(create_stamp)
			                                            MyTblInventoryEmbryo.setUpdateUser(update_user)
			                                            MyTblInventoryEmbryo.setUpdateStamp(update_stamp)
			                                            MyTblInventoryEmbryo.setFlushDate(flush_date)
			                                            MyTblInventoryEmbryo.setForSalePrivateTreaty(for_sale_private_treaty)
			                                            MyTblInventoryEmbryo.setPrivateTreatyDate(private_treaty_date)
			                                            MyTblInventoryEmbryo.setSellerComments(seller_comments)
			                                            MyTblInventoryEmbryo.setSalePrice(sale_price)
			                                            MyTblInventoryEmbryo.setBreederId(breeder_id)
			                                            MyTblInventoryEmbryo.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_embryo_inventory", withFields: ["pk_id", "member_id", "dam_registration"], withHeaders: ["pk_id", "member_id", "dam_regist"], withSizes: [25, 75, 50], withDataType: "TblInventoryEmbryo");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblLogs
			                        if let tbl_tablet_logs = base_json["tbl_tablet_logs"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_tablet_logs" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_tablet_logs")
			                                TblLogs.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_tablet_logs.count > 0 {
			                                for (var i = 0; i < tbl_tablet_logs.count; i += 1 ) {
                                    
			                                    if let get_tbl_tablet_logs = tbl_tablet_logs[i] as? NSDictionary {
                                        
			                                        let log_id = get_tbl_tablet_logs["log_id"] as? Int
			                                        let profile_id = get_tbl_tablet_logs["profile_id"] as? String
			                                        let flag_new_calf = get_tbl_tablet_logs["flag_new_calf"] as? String
			                                        let flag_new_wean = get_tbl_tablet_logs["flag_new_wean"] as? String
			                                        let flag_new_year = get_tbl_tablet_logs["flag_new_year"] as? String
			                                        let flag_new_eid = get_tbl_tablet_logs["flag_new_eid"] as? String
			                                        let flag_new_vacc = get_tbl_tablet_logs["flag_new_vacc"] as? String
			                                        let flag_new_bang = get_tbl_tablet_logs["flag_new_bang"] as? String
			                                        let flag_new_weight = get_tbl_tablet_logs["flag_new_weight"] as? String
			                                        let flag_new_pasture = get_tbl_tablet_logs["flag_new_pasture"] as? String
			                                        let flag_new_escaped = get_tbl_tablet_logs["flag_new_escaped"] as? String
			                                        let flag_new_brand = get_tbl_tablet_logs["flag_new_brand"] as? String
			                                        let flag_new_pregnancy = get_tbl_tablet_logs["flag_new_pregnancy"] as? String
			                                        let flag_new_breed_ai = get_tbl_tablet_logs["flag_new_breed_ai"] as? String
			                                        let flag_new_animal = get_tbl_tablet_logs["flag_new_animal"] as? String
			                                        let flag_new_comment = get_tbl_tablet_logs["flag_new_comment"] as? String
			                                        let flag_new_sync = get_tbl_tablet_logs["flag_new_sync"] as? String
			                                        let flag_new_breed_et = get_tbl_tablet_logs["flag_new_breed_et"] as? String
			                                        let phn = get_tbl_tablet_logs["phn"] as? String
			                                        let reg_no = get_tbl_tablet_logs["reg_no"] as? String
			                                        let eid = get_tbl_tablet_logs["eid"] as? String
			                                        let date_worked = get_tbl_tablet_logs["date_worked"] as? String
			                                        let pasture_id = get_tbl_tablet_logs["pasture_id"] as? String
			                                        let weight = get_tbl_tablet_logs["weight"] as? String
			                                        let sex = get_tbl_tablet_logs["sex"] as? String
			                                        let dob = get_tbl_tablet_logs["dob"] as? String
			                                        let dam = get_tbl_tablet_logs["dam"] as? String
			                                        let sire = get_tbl_tablet_logs["sire"] as? String
			                                        let bangs_id = get_tbl_tablet_logs["bangs_id"] as? String
			                                        let brand = get_tbl_tablet_logs["brand"] as? String
			                                        let brand_location = get_tbl_tablet_logs["brand_loc"] as? String
			                                        let prev_pasture_id = get_tbl_tablet_logs["prev_pasture_id"] as? String
			                                        let breed_type = get_tbl_tablet_logs["breed_type"] as? String
			                                        let palpation_result = get_tbl_tablet_logs["palpation_result"] as? String
			                                        let estimated_birthing = get_tbl_tablet_logs["estimated_birthing"] as? String
			                                        let comment = get_tbl_tablet_logs["comment"] as? String
			                                        let working_pasture_id = get_tbl_tablet_logs["working_pasture_id"] as? String
			                                        let create_user = get_tbl_tablet_logs["create_user"] as? String
			                                        let create_stamp2 = get_tbl_tablet_logs["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_tablet_logs["update_user"] as? String
			                                        let update_stamp2 = get_tbl_tablet_logs["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblLogs = TblLogsData()
                                            
			                                            MyTblLogs.setLogId(log_id)
			                                            MyTblLogs.setProfileId(profile_id)
			                                            MyTblLogs.setFlagNewCalf(flag_new_calf)
			                                            MyTblLogs.setFlagNewWean(flag_new_wean)
			                                            MyTblLogs.setFlagNewYear(flag_new_year)
			                                            MyTblLogs.setFlagNewEid(flag_new_eid)
			                                            MyTblLogs.setFlagNewVacc(flag_new_vacc)
			                                            MyTblLogs.setFlagNewBang(flag_new_bang)
			                                            MyTblLogs.setFlagNewWeight(flag_new_weight)
			                                            MyTblLogs.setFlagNewPasture(flag_new_pasture)
			                                            MyTblLogs.setFlagNewEscaped(flag_new_escaped)
			                                            MyTblLogs.setFlagNewBrand(flag_new_brand)
			                                            MyTblLogs.setFlagNewPregnancy(flag_new_pregnancy)
			                                            MyTblLogs.setFlagNewBreedAi(flag_new_breed_ai)
			                                            MyTblLogs.setFlagNewAnimal(flag_new_animal)
			                                            MyTblLogs.setFlagNewComment(flag_new_comment)
			                                            MyTblLogs.setFlagNewSync(flag_new_sync)
			                                            MyTblLogs.setFlagNewBreedEt(flag_new_breed_et)
			                                            MyTblLogs.setPhn(phn)
			                                            MyTblLogs.setRegNo(reg_no)
			                                            MyTblLogs.setEid(eid)
			                                            MyTblLogs.setDateWorked(date_worked)
			                                            MyTblLogs.setPastureId(pasture_id)
			                                            MyTblLogs.setWeight(weight)
			                                            MyTblLogs.setSex(sex)
			                                            MyTblLogs.setDob(dob)
			                                            MyTblLogs.setDam(dam)
			                                            MyTblLogs.setSire(sire)
			                                            MyTblLogs.setBangsId(bangs_id)
			                                            MyTblLogs.setBrand(brand)
			                                            MyTblLogs.setBrandLoc(brand_location)
			                                            MyTblLogs.setPrevPastureId(prev_pasture_id)
			                                            MyTblLogs.setBreedType(breed_type)
			                                            MyTblLogs.setPalpationResult(palpation_result)
			                                            MyTblLogs.setEstimatedBirthing(estimated_birthing)
			                                            MyTblLogs.setComment(comment)
			                                            MyTblLogs.setWorkingPastureId(working_pasture_id)
			                                            MyTblLogs.setCreateUser(create_user)
			                                            MyTblLogs.setCreateStamp(create_stamp)
			                                            MyTblLogs.setUpdateUser(update_user)
			                                            MyTblLogs.setUpdateStamp(update_stamp)
			                                            MyTblLogs.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_tablet_logs", withFields: ["log_id", "profile_id", "flag_new_calf"], withHeaders: ["log_id", "profile_id", "flag_new_c"], withSizes: [25, 75, 50], withDataType: "TblLogs");
                            
			                        }
                        
                        
                        
                        
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblMemberAndroidReports
			                        if let tbl_member_reports_android = base_json["tbl_member_reports_android"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_member_reports_android" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_tablet_logs")
			                                TblMemberAndroidReports.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_member_reports_android.count > 0 {
			                                for (var i = 0; i < tbl_member_reports_android.count; i += 1 ) {
                                    
			                                    if let get_tbl_member_reports_android = tbl_member_reports_android[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_member_reports_android["pk_id"] as? Int
			                                        let member_id = get_tbl_member_reports_android["member_id"] as? Int
			                                        let report_type = get_tbl_member_reports_android["report_type"] as? String
			                                        let report_file_name = get_tbl_member_reports_android["report_file_name"] as? String
			                                        let create_stamp2 = get_tbl_member_reports_android["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let report_format = get_tbl_member_reports_android["report_format"] as? String
			                                        let create_user = get_tbl_member_reports_android["create_user"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblMemberAndroidReports = TblMemberAndroidReportsData()
                                            
			                                            MyTblMemberAndroidReports.setPkId(pk_id)
			                                            MyTblMemberAndroidReports.setMemberId(member_id)
			                                            MyTblMemberAndroidReports.setReportType(report_type)
			                                            MyTblMemberAndroidReports.setReportFileName(report_file_name)
			                                            MyTblMemberAndroidReports.setCreateStamp(create_stamp)
			                                            MyTblMemberAndroidReports.setReportFormat(report_format)
			                                            MyTblMemberAndroidReports.setCreateUser(create_user)
			                                            MyTblMemberAndroidReports.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_member_reports_android", withFields: ["pk_id", "member_id"], withHeaders: ["pk_id", "member_id"], withSizes: [45, 75], withDataType: "TblMemberAndroidReports");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblMemberTransfers
			                        if let tbl_member_transfers = base_json["tbl_member_transfers"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_member_transfers" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_member_transfers")
			                                TblMemberTransfers.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_member_transfers.count > 0 {
			                                for (var i = 0; i < tbl_member_transfers.count; i += 1 ) {
                                    
			                                    if let get_tbl_member_transfers = tbl_member_transfers[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_member_transfers["pk_id"] as? Int
			                                        let member_id = get_tbl_member_transfers["member_id"] as? String
			                                        let work_order = get_tbl_member_transfers["work_order"] as? String
			                                        let customer_id = get_tbl_member_transfers["customer_id"] as? String
			                                        let transfer_date2 = get_tbl_member_transfers["transfer_date"] as? String
			                                        let transfer_date = Utils.convertToDateOpt(transfer_date2)
			                                        let transfer_value = get_tbl_member_transfers["transfer_value"] as? Double
			                                        let animal_registration = get_tbl_member_transfers["animal_registration"] as? String
			                                        let create_user = get_tbl_member_transfers["create_user"] as? String
			                                        let create_stamp2 = get_tbl_member_transfers["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_member_transfers["update_user"] as? String
			                                        let update_stamp2 = get_tbl_member_transfers["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblMemberTransfers = TblMemberTransfersData()
                                            
			                                            MyTblMemberTransfers.setPkId(pk_id)
			                                            MyTblMemberTransfers.setMemberId(member_id)
			                                            MyTblMemberTransfers.setWorkOrder(work_order)
			                                            MyTblMemberTransfers.setCustomerId(customer_id)
			                                            MyTblMemberTransfers.setTransferDate(transfer_date)
			                                            MyTblMemberTransfers.setTransferValue(transfer_value)
			                                            MyTblMemberTransfers.setAnimalRegistration(animal_registration)
			                                            MyTblMemberTransfers.setCreateUser(create_user)
			                                            MyTblMemberTransfers.setCreateStamp(create_stamp)
			                                            MyTblMemberTransfers.setUpdateUser(update_user)
			                                            MyTblMemberTransfers.setUpdateStamp(update_stamp)
			                                            MyTblMemberTransfers.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_member_transfers", withFields: ["pk_id", "member_id", "work_order"], withHeaders: ["pk_id", "member_id", "work_order"], withSizes: [25, 75, 50], withDataType: "TblMemberTransfers");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblPastures
			                        if let tbl_pastures = base_json["tbl_pastures"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_pastures" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_pastures")
			                                TblPastures.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_pastures.count > 0 {
			                                for (var i = 0; i < tbl_pastures.count; i += 1 ) {
                                    
			                                    if let get_tbl_pastures = tbl_pastures[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_pastures["pk_id"] as? Int
			                                        let member_id = get_tbl_pastures["member_id"] as? Int
			                                        let premise_id = get_tbl_pastures["premise_id"] as? String
			                                        let pasture_id = get_tbl_pastures["pasture_id"] as? String
			                                        let pasture_description = get_tbl_pastures["pasture_description"] as? String
			                                        let create_user = get_tbl_pastures["create_user"] as? String
			                                        let create_stamp2 = get_tbl_pastures["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_pastures["update_user"] as? String
			                                        let update_stamp2 = get_tbl_pastures["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblPastures = TblPasturesData()
                                            
			                                            MyTblPastures.setPkId(pk_id)
			                                            MyTblPastures.setMemberId(member_id)
			                                            MyTblPastures.setPremiseId(premise_id)
			                                            MyTblPastures.setPastureId(pasture_id)
			                                            MyTblPastures.setPastureDescription(pasture_description)
			                                            MyTblPastures.setCreateUser(create_user)
			                                            MyTblPastures.setCreateStamp(create_stamp)
			                                            MyTblPastures.setUpdateUser(update_user)
			                                            MyTblPastures.setUpdateStamp(update_stamp)
			                                            MyTblPastures.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_pastures", withFields: ["pk_id", "member_id", "premise_id"], withHeaders: ["pk_id", "member_id", "premise_id"], withSizes: [25, 75, 50], withDataType: "TblPastures");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblPens
			                        if let tbl_pens = base_json["tbl_pens"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_pens" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_pens")
			                                TblPens.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_pens.count > 0 {
			                                for (var i = 0; i < tbl_pens.count; i += 1 ) {
                                    
			                                    if let get_tbl_pens = tbl_pens[i] as? NSDictionary {
                                        
			                                        let pen_id = get_tbl_pens["pen_id"] as? Int
			                                        let member_id = get_tbl_pens["member_id"] as? String
			                                        let pen_name = get_tbl_pens["pen_name"] as? String
			                                        let pen_description = get_tbl_pens["pen_description"] as? String
			                                        let premise_id = get_tbl_pens["premise_id"] as? String
			                                        let create_user = get_tbl_pens["create_user"] as? String
			                                        let create_stamp2 = get_tbl_pens["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_pens["update_user"] as? String
			                                        let update_stamp2 = get_tbl_pens["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblPens = TblPensData()
                                            
			                                            MyTblPens.setPenId(pen_id)
			                                            MyTblPens.setMemberId(member_id)
			                                            MyTblPens.setPenName(pen_name)
			                                            MyTblPens.setPenDescription(pen_description)
			                                            MyTblPens.setPremiseId(premise_id)
			                                            MyTblPens.setCreateUser(create_user)
			                                            MyTblPens.setCreateStamp(create_stamp)
			                                            MyTblPens.setUpdateUser(update_user)
			                                            MyTblPens.setUpdateStamp(update_stamp)
			                                            MyTblPens.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_pens", withFields: ["pen_id", "member_id", "pen_name"], withHeaders: ["pen_id", "member_id", "pen_name"], withSizes: [25, 75, 50], withDataType: "TblPens");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblTodo
			                        if let tbl_todo = base_json["tbl_todo"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_todo" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_todo")
			                                TblTodo.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_todo.count > 0 {
			                                for (var i = 0; i < tbl_todo.count; i += 1 ) {
                                    
			                                    if let get_tbl_todo = tbl_todo[i] as? NSDictionary {
                                        
			                                        let todo_id = get_tbl_todo["todo_id"] as? Int
			                                        let member_id = get_tbl_todo["member_id"] as? String
			                                        let header = get_tbl_todo["header"] as? String
			                                        let details = get_tbl_todo["details"] as? String
			                                        let date_due2 = get_tbl_todo["date_due"] as? String
			                                        let date_due = Utils.convertToDateOpt(date_due2)
			                                        let date_completed2 = get_tbl_todo["date_completed"] as? String
			                                        let date_completed = Utils.convertToDateOpt(date_completed2)
			                                        let flag_completed = get_tbl_todo["flag_completed"] as? Int
			                                        let create_user = get_tbl_todo["create_user"] as? String
			                                        let create_stamp2 = get_tbl_todo["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_todo["update_user"] as? String
			                                        let update_stamp2 = get_tbl_todo["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        let flag_deleted = get_tbl_todo["flag_deleted"] as? Int
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblTodo = TblTodoData()
                                            
			                                            MyTblTodo.setTodoId(todo_id)
			                                            MyTblTodo.setMemberId(member_id)
			                                            MyTblTodo.setHeader(header)
			                                            MyTblTodo.setDetails(details)
			                                            MyTblTodo.setDateDue(date_due)
			                                            MyTblTodo.setDateCompleted(date_completed)
			                                            MyTblTodo.setFlagCompleted(flag_completed)
			                                            MyTblTodo.setCreateUser(create_user)
			                                            MyTblTodo.setCreateStamp(create_stamp)
			                                            MyTblTodo.setUpdateUser(update_user)
			                                            MyTblTodo.setUpdateStamp(update_stamp)
			                                            MyTblTodo.setFlagDeleted(flag_deleted)
			                                            MyTblTodo.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_todo", withFields: ["todo_id", "member_id", "header"], withHeaders: ["todo_id", "member_id", "header"], withSizes: [25, 75, 50], withDataType: "TblTodo");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblVaccinations
			                        if let tbl_vaccinations = base_json["tbl_vaccinations"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_vaccinations" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_vaccinations")
			                                TblVaccinations.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_vaccinations.count > 0 {
			                                for (var i = 0; i < tbl_vaccinations.count; i += 1 ) {
                                    
			                                    if let get_tbl_vaccinations = tbl_vaccinations[i] as? NSDictionary {
                                        
			                                        let pk_id = get_tbl_vaccinations["pk_id"] as? Int
			                                        let member_id = get_tbl_vaccinations["member_id"] as? Int
			                                        let _id = get_tbl_vaccinations["_id"] as? Int
			                                        let withdrawal_period = get_tbl_vaccinations["withdrawal_period"] as? String
			                                        let date2 = get_tbl_vaccinations["date"] as? String
			                                        let date = Utils.convertToDateOpt(date2)
			                                        let product_name = get_tbl_vaccinations["product_name"] as? String
			                                        let lot_number = get_tbl_vaccinations["lot_number"] as? String
			                                        let serial_number = get_tbl_vaccinations["serial_number"] as? String
			                                        let expiration_date2 = get_tbl_vaccinations["expiration_date"] as? String
			                                        let expiration_date = Utils.convertToDateOpt(expiration_date2)
			                                        let dosage = get_tbl_vaccinations["dosage"] as? String
			                                        let method = get_tbl_vaccinations["method"] as? String
			                                        let location = get_tbl_vaccinations["location"] as? String
			                                        let administered_by = get_tbl_vaccinations["administered_by"] as? String
			                                        let less_ten_month = get_tbl_vaccinations["less_ten_month"] as? Int
			                                        let greater_ten_month = get_tbl_vaccinations["greater_ten_month"] as? Int
			                                        let female_only = get_tbl_vaccinations["female_only"] as? Int
			                                        let male_only = get_tbl_vaccinations["male_only"] as? Int
			                                        let less_twelve_month = get_tbl_vaccinations["less_twelve_month"] as? Int
			                                        let bangs_vaccs = get_tbl_vaccinations["bangs_vaccs"] as? Int
			                                        let no_requirements = get_tbl_vaccinations["no_requirements"] as? Int
			                                        let active_flag = get_tbl_vaccinations["active_flag"] as? Int
			                                        let create_user = get_tbl_vaccinations["create_user"] as? String
			                                        let create_stamp2 = get_tbl_vaccinations["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_vaccinations["update_user"] as? String
			                                        let update_stamp2 = get_tbl_vaccinations["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblVaccinations = TblVaccinationsData()
                                            
			                                            MyTblVaccinations.setPkId(pk_id)
			                                            MyTblVaccinations.setMemberId(member_id)
			                                            MyTblVaccinations.setId(_id)
			                                            MyTblVaccinations.setWithdrawalPeriod(withdrawal_period)
			                                            MyTblVaccinations.setDate(date)
			                                            MyTblVaccinations.setProductName(product_name)
			                                            MyTblVaccinations.setLotNumber(lot_number)
			                                            MyTblVaccinations.setSerialNumber(serial_number)
			                                            MyTblVaccinations.setExpirationDate(expiration_date)
			                                            MyTblVaccinations.setDosage(dosage)
			                                            MyTblVaccinations.setMethod(method)
			                                            MyTblVaccinations.setLocation(location)
			                                            MyTblVaccinations.setAdministeredBy(administered_by)
			                                            MyTblVaccinations.setLessTenMonth(less_ten_month)
			                                            MyTblVaccinations.setGreaterTenMonth(greater_ten_month)
			                                            MyTblVaccinations.setFemaleOnly(female_only)
			                                            MyTblVaccinations.setMaleOnly(male_only)
			                                            MyTblVaccinations.setLessTwelveMonth(less_twelve_month)
			                                            MyTblVaccinations.setBangsVaccs(bangs_vaccs)
			                                            MyTblVaccinations.setNoRequirements(no_requirements)
			                                            MyTblVaccinations.setActiveFlag(active_flag)
			                                            MyTblVaccinations.setCreateUser(create_user)
			                                            MyTblVaccinations.setCreateStamp(create_stamp)
			                                            MyTblVaccinations.setUpdateUser(update_user)
			                                            MyTblVaccinations.setUpdateStamp(update_stamp)
			                                            MyTblVaccinations.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_vaccinations", withFields: ["pk_id", "member_id", "_id"], withHeaders: ["pk_id", "member_id", "_id"], withSizes: [25, 75, 50], withDataType: "TblVaccinations");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblWorkOrder
			                        if let tbl_work_recieved = base_json["tbl_work_recieved"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_work_recieved" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_work_recieved")
			                                TblWorkOrder.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_work_recieved.count > 0 {
			                                for (var i = 0; i < tbl_work_recieved.count; i += 1 ) {
                                    
			                                    if let get_tbl_work_recieved = tbl_work_recieved[i] as? NSDictionary {
                                        
			                                        let work_received_id = get_tbl_work_recieved["work_received_id"] as? Int
			                                        let member_id = get_tbl_work_recieved["member_id"] as? Int
			                                        let date_received2 = get_tbl_work_recieved["date_received"] as? String
			                                        let date_received = Utils.convertToDateOpt(date_received2)
			                                        let received_by = get_tbl_work_recieved["received_by"] as? String
			                                        let work_description = get_tbl_work_recieved["work_description"] as? String
			                                        let date_worked2 = get_tbl_work_recieved["date_worked"] as? String
			                                        let date_worked = Utils.convertToDateOpt(date_worked2)
			                                        let worked_by = get_tbl_work_recieved["worked_by"] as? String
			                                        let date_printed2 = get_tbl_work_recieved["date_printed"] as? String
			                                        let date_printed = Utils.convertToDateOpt(date_printed2)
			                                        let printed_by = get_tbl_work_recieved["printed_by"] as? String
			                                        let date_mailed2 = get_tbl_work_recieved["date_mailed"] as? String
			                                        let date_mailed = Utils.convertToDateOpt(date_mailed2)
			                                        let mailed_by = get_tbl_work_recieved["mailed_by"] as? String
			                                        let started_by = get_tbl_work_recieved["started_by"] as? String
			                                        let start_date2 = get_tbl_work_recieved["start_date"] as? String
			                                        let start_date = Utils.convertToDateOpt(start_date2)
			                                        let time_stamp2 = get_tbl_work_recieved["time_stamp"] as? String
			                                        let time_stamp = Utils.convertToDateOpt(time_stamp2)
			                                        let close_flag = get_tbl_work_recieved["close_flag"] as? Int
			                                        let closed_by = get_tbl_work_recieved["closed_by"] as? String
			                                        let paypal_id = get_tbl_work_recieved["paypal_id"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblWorkOrder = TblWorkOrderData()
                                            
			                                            MyTblWorkOrder.setWorkReceivedId(work_received_id)
			                                            MyTblWorkOrder.setMemberId(member_id)
			                                            MyTblWorkOrder.setDateReceived(date_received)
			                                            MyTblWorkOrder.setReceivedBy(received_by)
			                                            MyTblWorkOrder.setWorkDescription(work_description)
			                                            MyTblWorkOrder.setDateWorked(date_worked)
			                                            MyTblWorkOrder.setWorkedBy(worked_by)
			                                            MyTblWorkOrder.setDatePrinted(date_printed)
			                                            MyTblWorkOrder.setPrintedBy(printed_by)
			                                            MyTblWorkOrder.setDateMailed(date_mailed)
			                                            MyTblWorkOrder.setMailedBy(mailed_by)
			                                            MyTblWorkOrder.setStartedBy(started_by)
			                                            MyTblWorkOrder.setStartDate(start_date)
			                                            MyTblWorkOrder.setTimeStamp(time_stamp)
			                                            MyTblWorkOrder.setCloseFlag(close_flag)
			                                            MyTblWorkOrder.setClosedBy(closed_by)
			                                            MyTblWorkOrder.setPaypalId(paypal_id)
			                                            MyTblWorkOrder.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_work_recieved", withFields: ["work_received_id", "member_id", "date_received"], withHeaders: ["work_recei", "member_id", "date_recei"], withSizes: [25, 75, 50], withDataType: "TblWorkOrder");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblWorkOrderInvoiceItems
			                        if let tbl_invoice_items = base_json["tbl_invoice_items"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_invoice_items" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_invoice_items")
			                                TblWorkOrderInvoiceItems.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_invoice_items.count > 0 {
			                                for (var i = 0; i < tbl_invoice_items.count; i += 1 ) {
                                    
			                                    if let get_tbl_invoice_items = tbl_invoice_items[i] as? NSDictionary {
                                        
			                                        let invoice_item_id = get_tbl_invoice_items["invoice_item_id"] as? Int
			                                        let animal_registration = get_tbl_invoice_items["animal_registration"] as? String
			                                        let member_id = get_tbl_invoice_items["member_id"] as? Int
			                                        let description = get_tbl_invoice_items["description"] as? String
			                                        let fee = get_tbl_invoice_items["fee"] as? Double
			                                        let entered_by = get_tbl_invoice_items["entered_by"] as? String
			                                        let entered_on2 = get_tbl_invoice_items["entered_on"] as? String
			                                        let entered_on = Utils.convertToDateOpt(entered_on2)
			                                        let fee_type = get_tbl_invoice_items["fee_type"] as? String
			                                        let invoice_id = get_tbl_invoice_items["invoice_id"] as? String
			                                        let date_received2 = get_tbl_invoice_items["date_received"] as? String
			                                        let date_received = Utils.convertToDateOpt(date_received2)
			                                        let check_number = get_tbl_invoice_items["check_number"] as? String
			                                        let check_date2 = get_tbl_invoice_items["check_date"] as? String
			                                        let check_date = Utils.convertToDateOpt(check_date2)
			                                        let check_amount = get_tbl_invoice_items["check_amount"] as? Double
			                                        let private_herd_id = get_tbl_invoice_items["private_herd_id"] as? String
			                                        let invoice_date2 = get_tbl_invoice_items["invoice_date"] as? String
			                                        let invoice_date = Utils.convertToDateOpt(invoice_date2)
			                                        let send_to_id = get_tbl_invoice_items["send_to_id"] as? Int
			                                        let lock_invoice_item = get_tbl_invoice_items["lock_invoice_item"] as? String
			                                        let work_order = get_tbl_invoice_items["work_order"] as? String
			                                        let updated_by = get_tbl_invoice_items["updated_by"] as? String
			                                        let updated_on2 = get_tbl_invoice_items["updated_on"] as? String
			                                        let updated_on = Utils.convertToDateOpt(updated_on2)
			                                        let temp_id = get_tbl_invoice_items["temp_id"] as? Int
			                                        let mas90_id = get_tbl_invoice_items["mas90_id"] as? String
			                                        let supplement_number = get_tbl_invoice_items["supplement_number"] as? Int
			                                        let mail_certificate_to = get_tbl_invoice_items["mail_certificate_to"] as? String
			                                        let supplement_sequence = get_tbl_invoice_items["supplement_sequence"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblWorkOrderInvoiceItems = TblWorkOrderInvoiceItemsData()
                                            
			                                            MyTblWorkOrderInvoiceItems.setInvoiceItemId(invoice_item_id)
			                                            MyTblWorkOrderInvoiceItems.setAnimalRegistration(animal_registration)
			                                            MyTblWorkOrderInvoiceItems.setMemberId(member_id)
			                                            MyTblWorkOrderInvoiceItems.setDescription(description)
			                                            MyTblWorkOrderInvoiceItems.setFee(fee)
			                                            MyTblWorkOrderInvoiceItems.setEnteredBy(entered_by)
			                                            MyTblWorkOrderInvoiceItems.setEnteredOn(entered_on)
			                                            MyTblWorkOrderInvoiceItems.setFeeType(fee_type)
			                                            MyTblWorkOrderInvoiceItems.setInvoiceId(invoice_id)
			                                            MyTblWorkOrderInvoiceItems.setDateReceived(date_received)
			                                            MyTblWorkOrderInvoiceItems.setCheckNumber(check_number)
			                                            MyTblWorkOrderInvoiceItems.setCheckDate(check_date)
			                                            MyTblWorkOrderInvoiceItems.setCheckAmount(check_amount)
			                                            MyTblWorkOrderInvoiceItems.setPrivateHerdId(private_herd_id)
			                                            MyTblWorkOrderInvoiceItems.setInvoiceDate(invoice_date)
			                                            MyTblWorkOrderInvoiceItems.setSendToId(send_to_id)
			                                            MyTblWorkOrderInvoiceItems.setLockInvoiceItem(lock_invoice_item)
			                                            MyTblWorkOrderInvoiceItems.setWorkOrder(work_order)
			                                            MyTblWorkOrderInvoiceItems.setUpdatedBy(updated_by)
			                                            MyTblWorkOrderInvoiceItems.setUpdatedOn(updated_on)
			                                            MyTblWorkOrderInvoiceItems.setTempId(temp_id)
			                                            MyTblWorkOrderInvoiceItems.setMas90Id(mas90_id)
			                                            MyTblWorkOrderInvoiceItems.setSupplementNumber(supplement_number)
			                                            MyTblWorkOrderInvoiceItems.setMailCertificateTo(mail_certificate_to)
			                                            MyTblWorkOrderInvoiceItems.setSupplementSequence(supplement_sequence)
			                                            MyTblWorkOrderInvoiceItems.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_invoice_items", withFields: ["invoice_item_id", "animal_registration", "member_id"], withHeaders: ["invoice_it", "animal_reg", "member_id"], withSizes: [25, 75, 50], withDataType: "TblWorkOrderInvoiceItems");
                            
			                        }
                        
                        
                        
			                        ///////////////////////////////////////////
			                        // VwCustomers
			                        if let vw_member_customers = base_json["vw_member_customers"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "vw_member_customers" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("vw_member_customers")
			                                VwCustomers.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if vw_member_customers.count > 0 {
			                                for (var i = 0; i < vw_member_customers.count; i += 1 ) {
                                    
			                                    if let get_vw_member_customers = vw_member_customers[i] as? NSDictionary {
                                        
			                                        //let _id = get_vw_member_customers["_id"] as? Int
			                                        let customer_id = get_vw_member_customers["customer_id"] as? Int
			                                        let address_id = get_vw_member_customers["address_id"] as? Int
			                                        let customer_name = get_vw_member_customers["customer_name"] as? String
			                                        let address_line1 = get_vw_member_customers["address_line1"] as? String
			                                        let address_line2 = get_vw_member_customers["address_line2"] as? String
			                                        let address_city = get_vw_member_customers["address_city"] as? String
			                                        let address_state = get_vw_member_customers["address_state"] as? String
			                                        let address_postal_code = get_vw_member_customers["address_postal_code"] as? String
			                                        let address_country = get_vw_member_customers["address_country"] as? String
			                                        let address_email = get_vw_member_customers["address_email"] as? String
			                                        let num_purch = get_vw_member_customers["num_purch"] as? Int
			                                        let date_purch2 = get_vw_member_customers["date_purch"] as? String
			                                        let date_purch = Utils.convertToDateOpt(date_purch2)
			                                        let longitude = get_vw_member_customers["longitude"] as? String
			                                        let latitude = get_vw_member_customers["latitude"] as? String
			                                        let phone1 = get_vw_member_customers["phone1"] as? String
			                                        let phone2 = get_vw_member_customers["phone2"] as? String
			                                        let phone3 = get_vw_member_customers["phone3"] as? String
			                                        let member_dba = get_vw_member_customers["member_dba"] as? String
			                                        let herd_code = get_vw_member_customers["herd_code"] as? String
			                                        let hold_brand_location = get_vw_member_customers["hold_brand_location"] as? String
			                                        let tattoo_location = get_vw_member_customers["tattoo_location"] as? String
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyVwCustomers = VwCustomersData()
                                            
			                                            //MyVwCustomers.setId(_id)
			                                            MyVwCustomers.setCustomerId(customer_id)
			                                            MyVwCustomers.setAddressId(address_id)
			                                            MyVwCustomers.setCustomerName(customer_name)
			                                            MyVwCustomers.setAddressLine1(address_line1)
			                                            MyVwCustomers.setAddressLine2(address_line2)
			                                            MyVwCustomers.setAddressCity(address_city)
			                                            MyVwCustomers.setAddressState(address_state)
			                                            MyVwCustomers.setAddressPostalCode(address_postal_code)
			                                            MyVwCustomers.setAddressCountry(address_country)
			                                            MyVwCustomers.setAddressEmail(address_email)
			                                            MyVwCustomers.setNumPurch(num_purch)
			                                            MyVwCustomers.setDatePurch(date_purch)
			                                            MyVwCustomers.setLongitude(longitude)
			                                            MyVwCustomers.setLatitude(latitude)
			                                            MyVwCustomers.setPhone1(phone1)
			                                            MyVwCustomers.setPhone2(phone2)
			                                            MyVwCustomers.setPhone3(phone3)
			                                            MyVwCustomers.setMemberDba(member_dba)
			                                            MyVwCustomers.setHerdCode(herd_code)
			                                            MyVwCustomers.setHoldBrandLocation(hold_brand_location)
			                                            MyVwCustomers.setTattooLocation(tattoo_location)
			                                            MyVwCustomers.addNew()
                                            
                                            
                                            
                                            
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("vw_member_customers", withFields: ["_id", "customer_id", "address_id"], withHeaders: ["_id", "customer_i", "address_id"], withSizes: [25, 75, 50], withDataType: "VwCustomers");
                            
			                        }
                        
                        
                        
                                    ///////////////////////////////////////////
                                    // VwEpd
                                    if let vw_animal_epd = base_json["vw_animal_epd"] as? NSArray {
                                        
                                        if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("vw_animal_epd")
                                            VwEpd.truncate()
                                        }
                                        
                                        let dbn = DatabaseOld()
                                        if vw_animal_epd.count > 0 {
                                            for (var i = 0; i < vw_animal_epd.count; i += 1 ) {
                                                
                                                if let get_vw_animal_epd = vw_animal_epd[i] as? NSDictionary {
                                                    
                                                    let animal_id = get_vw_animal_epd["animal_id"] as? Int
                                                    let animal_registration = get_vw_animal_epd["animal_registration"] as? String
                                                    let animal_private_herd_id = get_vw_animal_epd["animal_private_herd_id"] as? String
                                                    let record_type = get_vw_animal_epd["record_type"] as? String
                                                    let active = get_vw_animal_epd["active"] as? Int
                                                    let progeny_count = get_vw_animal_epd["progeny_count"] as? Int
                                                    let animal_sex = get_vw_animal_epd["animal_sex"] as? String
                                                    let animal_name = get_vw_animal_epd["animal_name"] as? String
                                                    let birth_date2 = get_vw_animal_epd["birth_date"] as? String
                                                    let birth_date = Utils.convertToDateOpt(birth_date2)
                                                    let animal_sire = get_vw_animal_epd["animal_sire"] as? String
                                                    let animal_dam = get_vw_animal_epd["animal_dam"] as? String
                                                    let bw = get_vw_animal_epd["bw"] as? Double
                                                    let bw_accuracy = get_vw_animal_epd["bw_accuracy"] as? Double
                                                    let bw_progeny_count = get_vw_animal_epd["bw_progeny_count"] as? Int
                                                    let bw_progeny_herd_count = get_vw_animal_epd["bw_progeny_herd_count"] as? Int
                                                    let bw_progeny_cg_count = get_vw_animal_epd["bw_progeny_cg_count"] as? Int
                                                    let ww = get_vw_animal_epd["ww"] as? Double
                                                    let ww_accuracy = get_vw_animal_epd["ww_accuracy"] as? Double
                                                    let ww_progeny_count = get_vw_animal_epd["ww_progeny_count"] as? Int
                                                    let ww_progeny_herd_count = get_vw_animal_epd["ww_progeny_herd_count"] as? Int
                                                    let ww_progeny_cg_count = get_vw_animal_epd["ww_progeny_cg_count"] as? Int
                                                    let ww_maternal = get_vw_animal_epd["ww_maternal"] as? Double
                                                    let ww_maternal_accuracy = get_vw_animal_epd["ww_maternal_accuracy"] as? Double
                                                    let ww_progeny_daughter_count = get_vw_animal_epd["ww_progeny_daughter_count"] as? Int
                                                    let ww_progeny_daughter_herd_count = get_vw_animal_epd["ww_progeny_daughter_herd_count"] as? Int
                                                    let ww_progeny_daughter_cg_count = get_vw_animal_epd["ww_progeny_daughter_cg_count"] as? Int
                                                    let weaning_milk_growth = get_vw_animal_epd["weaning_milk_growth"] as? Double
                                                    let weaning_permanent_environment = get_vw_animal_epd["weaning_permanent_environment"] as? Double
                                                    let yw = get_vw_animal_epd["yw"] as? Double
                                                    let yw_accuracy = get_vw_animal_epd["yw_accuracy"] as? Double
                                                    let yw_progeny_count = get_vw_animal_epd["yw_progeny_count"] as? Int
                                                    let yw_progeny_herd_count = get_vw_animal_epd["yw_progeny_herd_count"] as? Int
                                                    let yw_progeny_cg_count = get_vw_animal_epd["yw_progeny_cg_count"] as? Int
                                                    let sc = get_vw_animal_epd["sc"] as? Double
                                                    let sc_accuracy = get_vw_animal_epd["sc_accuracy"] as? Double
                                                    let sc_progeny_count = get_vw_animal_epd["sc_progeny_count"] as? Int
                                                    let sc_progeny_herd_count = get_vw_animal_epd["sc_progeny_herd_count"] as? Int
                                                    let sc_progeny_cg_count = get_vw_animal_epd["sc_progeny_cg_count"] as? Int
                                                    let us_rea = get_vw_animal_epd["us_rea"] as? Double
                                                    let us_rea_accuracy = get_vw_animal_epd["us_rea_accuracy"] as? Double
                                                    let us_rea_progeny_count = get_vw_animal_epd["us_rea_progeny_count"] as? Int
                                                    let us_rea_progeny_herd_count = get_vw_animal_epd["us_rea_progeny_herd_count"] as? Int
                                                    let us_rea_progeny_cg_count = get_vw_animal_epd["us_rea_progeny_cg_count"] as? Int
                                                    let us_imf = get_vw_animal_epd["us_imf"] as? Double
                                                    let us_imf_accuracy = get_vw_animal_epd["us_imf_accuracy"] as? Double
                                                    let us_imf_progeny_count = get_vw_animal_epd["us_imf_progeny_count"] as? Int
                                                    let us_imf_progeny_herd_count = get_vw_animal_epd["us_imf_progeny_herd_count"] as? Int
                                                    let us_imf_progeny_cg_count = get_vw_animal_epd["us_imf_progeny_cg_count"] as? Int
                                                    let us_fat = get_vw_animal_epd["us_fat"] as? Double
                                                    let us_fat_accuracy = get_vw_animal_epd["us_fat_accuracy"] as? Double
                                                    let us_fat_progeny_count = get_vw_animal_epd["us_fat_progeny_count"] as? Int
                                                    let us_fat_progeny_herd_count = get_vw_animal_epd["us_fat_progeny_herd_count"] as? Int
                                                    let us_fat_progeny_cg_count = get_vw_animal_epd["us_fat_progeny_cg_count"] as? Int
                                                    let source = get_vw_animal_epd["source"] as? String
                                                    let ced = get_vw_animal_epd["ced"] as? Double
                                                    let ced_accuracy = get_vw_animal_epd["ced_accuracy"] as? Double
                                                    let cem = get_vw_animal_epd["cem"] as? Double
                                                    let cem_accuracy = get_vw_animal_epd["cem_accuracy"] as? Double
                                                    let carc_wt = get_vw_animal_epd["carc_wt"] as? Double
                                                    let carc_wt_accuracy = get_vw_animal_epd["carc_wt_accuracy"] as? Double
                                                    let carc_rea = get_vw_animal_epd["carc_rea"] as? Double
                                                    let carc_rea_accuracy = get_vw_animal_epd["carc_rea_accuracy"] as? Double
                                                    let carc_fat = get_vw_animal_epd["carc_fat"] as? Double
                                                    let carc_fat_accuracy = get_vw_animal_epd["carc_fat_accuracy"] as? Double
                                                    let carc_marb = get_vw_animal_epd["carc_marb"] as? Double
                                                    let carc_marb_accuracy = get_vw_animal_epd["carc_marb_accuracy"] as? Double
                                                    if DBUtils.isNewDB() == false {
                                                        
                                                        let MyVwEpd = VwEpdData()
                                                        
                                                        MyVwEpd.setAnimalRegistration(animal_registration)
                                                        MyVwEpd.setBw(bw)
                                                        MyVwEpd.setBwAccuracy(bw_accuracy)
                                                        MyVwEpd.setBwProgenyCount(bw_progeny_count)
                                                        MyVwEpd.setWw(ww)
                                                        MyVwEpd.setWwAccuracy(ww_accuracy)
                                                        MyVwEpd.setWwProgenyCount(ww_progeny_count)
                                                        MyVwEpd.setWeaningMilkGrowth(weaning_milk_growth)
                                                        MyVwEpd.setYw(yw)
                                                        MyVwEpd.setYwAccuracy(yw_accuracy)
                                                        MyVwEpd.setSc(sc)
                                                        MyVwEpd.setScAccuracy(sc_accuracy)
                                                        MyVwEpd.setUsRea(us_rea)
                                                        MyVwEpd.setUsReaAccuracy(us_rea_accuracy)
                                                        MyVwEpd.setUsImf(us_imf)
                                                        MyVwEpd.setUsImfAccuracy(us_imf_accuracy)
                                                        MyVwEpd.setUsFat(us_fat)
                                                        MyVwEpd.setUsFatAccuracy(us_fat_accuracy)
                                                        MyVwEpd.setCed(ced)
                                                        MyVwEpd.setCedAccuracy(ced_accuracy)
                                                        MyVwEpd.setCem(cem)
                                                        MyVwEpd.setCemAccuracy(cem_accuracy)
                                                       
                                                        MyVwEpd.addNew()
                                                       
                                                    }
                                                }
                                            }
                                            
                                            if (self.db_ins_query.rangeOfString("select") != nil) {
                                                dbn.query(self.db_ins_query)
                                            }
                                        } else if self.sync_test_mode == true {
                                            
                                            /*let MyAnimalsLocationData = AnimalsPastureLocationData()
                                             let registration: String? = "TEST123"
                                             MyAnimalsLocationData.setRegistration(registration)
                                             let pasture_id: Int? = 123
                                             MyAnimalsLocationData.setPastureId(pasture_id)
                                             let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
                                             MyAnimalsLocationData.setMoveIn(move_in)
                                             MyAnimalsLocationData.addNew()*/
                                        }
                                        dbn.showRecords("vw_animal_epd", withFields: ["_id", "animal_registration", "bw"], withHeaders: ["_id", "animal_reg", "bw"], withSizes: [25, 45, 45], withDataType: "VwEpd");
                                        
                                    }

                        
                        
                        
			                        ///////////////////////////////////////////
			                        // TblOwnership
			                        if let tbl_ownership = base_json["tbl_ownership"] as? NSArray where self.db_old_tables_list[self.db_cur_index] == "tbl_ownership" {
                            
			                            if DBUtils.isNewDB() == false && self.offset == 0 {
                                            print("tbl_ownership")
			                                TblOwnership.truncate()
			                            }
                            
			                            let dbn = DatabaseOld()
			                            if tbl_ownership.count > 0 {
			                                for (var i = 0; i < tbl_ownership.count; i += 1 ) {
                                    
			                                    if let get_tbl_ownership = tbl_ownership[i] as? NSDictionary {
                                        
			                                        let ownership_id = get_tbl_ownership["ownership_id"] as? Int
			                                        let animal_registration = get_tbl_ownership["animal_registration"] as? String
			                                        let owner_id = get_tbl_ownership["owner_id"] as? Int
			                                        let ownership_amount = get_tbl_ownership["ownership_amount"] as? Double
			                                        let ownership_date2 = get_tbl_ownership["ownership_date"] as? String
			                                        let ownership_date = Utils.convertToDateOpt(ownership_date2)
			                                        let is_primary = get_tbl_ownership["is_primary"] as? Int
			                                        let superceded_flag = get_tbl_ownership["superceded_flag"] as? Int
			                                        let superceded_date2 = get_tbl_ownership["superceded_date"] as? String
			                                        let superceded_date = Utils.convertToDateOpt(superceded_date2)
			                                        let old_owner_id = get_tbl_ownership["old_owner_id"] as? Int
			                                        let is_transfer = get_tbl_ownership["is_transfer"] as? Int
			                                        let is_calf_at_side = get_tbl_ownership["is_calf_at_side"] as? Int
			                                        let for_sale_private_treaty = get_tbl_ownership["for_sale_private_treaty"] as? Int
			                                        let seller_comments = get_tbl_ownership["seller_comments"] as? String
			                                        let sale_price = get_tbl_ownership["sale_price"] as? Int
			                                        let private_treaty_date2 = get_tbl_ownership["private_treaty_date"] as? String
			                                        let private_treaty_date = Utils.convertToDateOpt(private_treaty_date2)
			                                        let work_order = get_tbl_ownership["work_order"] as? String
			                                        let create_user = get_tbl_ownership["create_user"] as? String
			                                        let create_stamp2 = get_tbl_ownership["create_stamp"] as? String
			                                        let create_stamp = Utils.convertToDateOpt(create_stamp2)
			                                        let update_user = get_tbl_ownership["update_user"] as? String
			                                        let update_stamp2 = get_tbl_ownership["update_stamp"] as? String
			                                        let update_stamp = Utils.convertToDateOpt(update_stamp2)
			                                        if DBUtils.isNewDB() == false {
                                            
			                                            let MyTblOwnership = TblOwnershipData()
                                            
			                                            MyTblOwnership.setOwnershipId(ownership_id)
			                                            MyTblOwnership.setAnimalRegistration(animal_registration)
			                                            MyTblOwnership.setOwnerId(owner_id)
			                                            MyTblOwnership.setOwnershipAmount(ownership_amount)
			                                            MyTblOwnership.setOwnershipDate(ownership_date)
			                                            MyTblOwnership.setIsPrimary(is_primary)
			                                            MyTblOwnership.setSupercededFlag(superceded_flag)
			                                            MyTblOwnership.setSupercededDate(superceded_date)
			                                            MyTblOwnership.setOldOwnerId(old_owner_id)
			                                            MyTblOwnership.setIsTransfer(is_transfer)
			                                            MyTblOwnership.setIsCalfAtSide(is_calf_at_side)
			                                            MyTblOwnership.setForSalePrivateTreaty(for_sale_private_treaty)
			                                            MyTblOwnership.setSellerComments(seller_comments)
			                                            MyTblOwnership.setSalePrice(sale_price)
			                                            MyTblOwnership.setPrivateTreatyDate(private_treaty_date)
			                                            MyTblOwnership.setWorkOrder(work_order)
			                                            MyTblOwnership.setCreateUser(create_user)
			                                            MyTblOwnership.setCreateStamp(create_stamp)
			                                            MyTblOwnership.setUpdateUser(update_user)
			                                            MyTblOwnership.setUpdateStamp(update_stamp)
			                                            MyTblOwnership.addNew()
                                            
			                                        }
			                                    }
			                                }
                                
			                                if (self.db_ins_query.rangeOfString("select") != nil) {
			                                    dbn.query(self.db_ins_query)
			                                }
			                            } else if self.sync_test_mode == true {
                                
			                                /*let MyAnimalsLocationData = AnimalsPastureLocationData()
			                                let registration: String? = "TEST123"
			                                MyAnimalsLocationData.setRegistration(registration)
			                                let pasture_id: Int? = 123
			                                MyAnimalsLocationData.setPastureId(pasture_id)
			                                let move_in: NSDate? = Utils.convertToDateTimeOpt("2016-03-15 12:37:00")
			                                MyAnimalsLocationData.setMoveIn(move_in)
			                                MyAnimalsLocationData.addNew()*/
			                            }
			                            dbn.showRecords("tbl_ownership", withFields: ["ownership_id", "animal_registration", "owner_id"], withHeaders: ["ownership_", "animal_reg", "owner_id"], withSizes: [25, 75, 50], withDataType: "TblOwnership");
                            
							
			                        }
								} 
								
								dispatch_async(dispatch_get_main_queue()) {
				                    
                                    //print("returned_record_count:", self.returned_record_count)

